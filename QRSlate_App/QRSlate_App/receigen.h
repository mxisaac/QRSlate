//  ____                _                  
// |  _ \ ___  ___  ___(_) __ _  ___ _ __  
// | |_) / _ \/ __|/ _ \ |/ _` |/ _ \ '_ \ 
// |  _ <  __/ (__|  __/ | (_| |  __/ | | |
// |_| \_\___|\___|\___|_|\__, |\___|_| |_|
//                        |___/            
//
// This code was generated by Receigen and will use:
//
// CFBundleIdentifier=com.greyfade.qrslateimporter
// CFBundleShortVersionString=1.5.1
//
// Don't forget to link with the IOKit and Security frameworks !
//

//
// The default pedantic mode (OFF)
// Define to 1 if you need pedantic mode.
//
#ifndef RECEIGEN_PEDANTIC
#define RECEIGEN_PEDANTIC 0
#endif

//
// C++ prologue
//
#ifdef __cplusplus
extern "C" {
#endif
    
    // Headers for general purpose functions
#import <CoreFoundation/CoreFoundation.h>
    
    // Headers for library loading
#import <dlfcn.h>
    
    // Headers for bundle security checks
#import <CommonCrypto/CommonDigest.h>
#import <Security/Security.h>
#import <Security/CMSDecoder.h>
#import <Security/CSCommon.h>
#import <Security/SecAsn1Coder.h>
#import <Security/SecAsn1Templates.h>
#import <Security/SecCode.h>
#import <Security/SecRequirement.h>
#import <Security/SecStaticCode.h>
    
    // Headers for network checks
#import <IOKit/IOKitLib.h>
#import <arpa/inet.h>
#import <ifaddrs.h>
#import <net/if.h>
#import <net/if_dl.h>
    
    //
    // Structure describing an ASN.1 data
    //
    typedef struct _ReceiptValidation_ASN1_DATA {
        size_t length;
        uint8 *data;
    } ReceiptValidation_ASN1_DATA;
    
    //
    // Structure describing a receipt attribute
    //
    // ReceiptAttribute ::= SEQUENCE {
    //    type INTEGER,
    //    version INTEGER,
    //    value OCTET STRING
    // }
    //
    typedef struct _ReceiptValidation_ReceiptAttribute {
        ReceiptValidation_ASN1_DATA type;
        ReceiptValidation_ASN1_DATA version;
        ReceiptValidation_ASN1_DATA value;
    } ReceiptValidation_ReceiptAttribute;
    
    //
    // Structure describing a receipt
    //
    // Payload ::= SET OF ReceiptAttribute
    //
    typedef struct _ReceiptValidation_Payload {
        ReceiptValidation_ReceiptAttribute **attributes;
    } ReceiptValidation_Payload;
    
    //
    // ASN.1 template describing a receipt attribute or an InApp attribute
    //
    const SecAsn1Template ReceiptValidation_kReceiptAttributeTemplate[] = {
        { SEC_ASN1_SEQUENCE, 0, NULL, sizeof(ReceiptValidation_ReceiptAttribute) },
        { SEC_ASN1_INTEGER, offsetof(ReceiptValidation_ReceiptAttribute, type) },
        { SEC_ASN1_INTEGER, offsetof(ReceiptValidation_ReceiptAttribute, version) },
        { SEC_ASN1_OCTET_STRING, offsetof(ReceiptValidation_ReceiptAttribute, value) },
        { 0 }
    };
    
    //
    // ASN.1 template describing a receipt or an InApp receipt
    //
    const SecAsn1Template ReceiptValidation_kSetOfReceiptAttributeTemplate[] = {
        { SEC_ASN1_SET_OF, offsetof(ReceiptValidation_Payload, attributes), ReceiptValidation_kReceiptAttributeTemplate, sizeof(ReceiptValidation_Payload) },
        { 0 }
    };
    
    //
    // Shared context for receipt/InApp validation and parsing
    //
    typedef struct _ReceiptValidation_Context {
        CFTypeRef ReceiptValidation_mainBundle;
        CFTypeRef ReceiptValidation_receiptData;
        CFTypeRef ReceiptValidation_receiptDict;
        CFTypeRef ReceiptValidation_dummy0;
        CFTypeRef ReceiptValidation_macData;
        int ReceiptValidation_argc;
        CFTypeRef ReceiptValidation_dummy5;
        CFTypeRef ReceiptValidation_inAppBlock;
        CFTypeRef ReceiptValidation_dummy2;
        CFTypeRef ReceiptValidation_dummy1;
        CFTypeRef ReceiptValidation_inAppIdentifiers;
        const char ** ReceiptValidation_argv;
        CFTypeRef ReceiptValidation_dummy4;
        CFTypeRef ReceiptValidation_dummy3;
    } ReceiptValidation_Context;
    
    typedef struct _ReceiptValidation_Parsing {
        CFTypeRef ReceiptValidation_dummy1;
        CFTypeRef ReceiptValidation_dummy3;
        struct _ReceiptValidation_Parsing * ReceiptValidation_parent;
        ReceiptValidation_ReceiptAttribute ** ReceiptValidation_pointer;
        CFTypeRef ReceiptValidation_dummy5;
        size_t ReceiptValidation_length;
        const void * ReceiptValidation_source;
        CFTypeRef ReceiptValidation_dictionary;
        CFTypeRef ReceiptValidation_dummy2;
        CFTypeRef ReceiptValidation_dummy0;
        CFTypeRef ReceiptValidation_dummy4;
    } ReceiptValidation_Parsing;
    
    
    //
    // Keys for each receipt attribute and InApp attribute
    //
    typedef enum _ReceiptValidation_ReceiptAttributeType {
        // Bundle identifier
        ReceiptValidation_ReceiptAttributeTypeBundleId = 2,
        // Application version
        ReceiptValidation_ReceiptAttributeTypeBundleVersion = 3,
        // Opaque value
        ReceiptValidation_ReceiptAttributeTypeOpaqueValue = 4,
        // Hash value
        ReceiptValidation_ReceiptAttributeTypeHash = 5,
        // In-app purchase receipt
        ReceiptValidation_ReceiptAttributeTypeInAppPurchase = 17,
        
        // Quantity
        ReceiptValidation_InAppAttributeTypeQuantity = 1701,
        // Product identifier
        ReceiptValidation_InAppAttributeTypeProductIdentifer = 1702,
        // Transaction identifier
        ReceiptValidation_InAppAttributeTypeTransactionIdentifer = 1703,
        // Purchase date
        ReceiptValidation_InAppAttributeTypePurchaseDate = 1704,
        // Original transaction identifier
        ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
        // Original purchase date
        ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate = 1706,
        
        // Storage key base value
        ReceiptValidation_DataStoreNone = 2470,
        // Storage key for Bundle identifier
        ReceiptValidation_DataStoreBundleId = ReceiptValidation_DataStoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleId << 2),
        // Storage key for Bundle identifier as raw data
        ReceiptValidation_DataStoreBundleIdData = ReceiptValidation_DataStoreBundleId + 1,
        // Storage key for Application version
        ReceiptValidation_DataStoreBundleVersion = ReceiptValidation_DataStoreNone + (ReceiptValidation_ReceiptAttributeTypeBundleVersion << 2),
        // Storage key for Application version as raw data
        ReceiptValidation_DataStoreBundleVersionData = ReceiptValidation_DataStoreBundleVersion + 1,
        // Storage key for Opaque value
        ReceiptValidation_DataStoreOpaqueValue = ReceiptValidation_DataStoreNone + (ReceiptValidation_ReceiptAttributeTypeOpaqueValue << 2),
        // Storage key for Hash value
        ReceiptValidation_DataStoreHash = ReceiptValidation_DataStoreNone + (ReceiptValidation_ReceiptAttributeTypeHash << 2),
        // Storage key for In-app purchase receipts
        ReceiptValidation_DataStoreInAppPurchase = ReceiptValidation_DataStoreNone + (ReceiptValidation_ReceiptAttributeTypeInAppPurchase << 2),
    } ReceiptValidation_ReceiptAttributeType;
    
    //
    // Table for storing strings
    //
    static const char *ReceiptValidation_strings[0x009e] = {
        // "dlopen" - #M03L10Sc6
        "\xa2\xaa\xa9\xb6\xa3\xa8\xc6\x37\x59\xd3\xf4\x86\x7f\x22\x1d\xca",
        // Empty slot
        "\x39\xd3\xb1\x68\x53\x63\x24\xfb\x67\x7d\x99\x64\x05\xbd\xd4\x94",
        // "com.greyfade.qrslateimporter" - #M02L20Sffffffef
        "\x74\x80\x7e\x3f\x78\x83\x76\x8a\x77\x72\x75\x76\x3f\x82\x83\x84\x7d\x72\x85\x76\x7a\x7e\x81\x80\x83\x85\x76\x83\x11\xd6\x4e\xa3",
        // "IOServiceGetMatchingServices" - #M03L20Se1
        "\xa8\xae\xb2\x84\x93\x97\x88\x82\x84\xa6\x84\x95\xac\x80\x95\x82\x89\x88\x8f\x86\xb2\x84\x93\x97\x88\x82\x84\x92\xe1\xf8\xc1\x29",
        // Empty slot
        "\x55\x51\xf8\x27\x59\x09\xf1\xbc\x47\x03\x6d\xfd\xbb\x67\x62\x07",
        // "CFDictionaryGetValue" - #M02L20S69
        "\xda\xdd\xdb\x00\xfa\x0b\x00\x06\x05\xf8\x09\x10\xde\xfc\x0b\xed\xf8\x03\x0c\xfc\x97\xf3\x54\x36\x36\x67\x7c\xcc\x23\xc7\x39\x32",
        // "CFBundleGetValueForInfoDictionaryKey" - #M02L30S3a
        "\x09\x0c\x08\x3b\x34\x2a\x32\x2b\x0d\x2b\x3a\x1c\x27\x32\x3b\x2b\x0c\x35\x38\x0f\x34\x2c\x35\x0a\x2f\x29\x3a\x2f\x35\x34\x27\x38\x3f\x11\x2b\x3f\xc6\x3e\x44\x26\x84\x5e\x8b\xfc\x7b\x06\x9a\x47",
        // "/System/Library/Frameworks/Security.framework/Security" - #M03L40S94
        "\xbb\xc7\xed\xe7\xe0\xf1\xf9\xbb\xd8\xfd\xf6\xe6\xf5\xe6\xed\xbb\xd2\xe6\xf5\xf9\xf1\xe3\xfb\xe6\xff\xe7\xbb\xc7\xf1\xf7\xe1\xe6\xfd\xe0\xed\xba\xf2\xe6\xf5\xf9\xf1\xe3\xfb\xe6\xff\xbb\xc7\xf1\xf7\xe1\xe6\xfd\xe0\xed\x94\x44\x59\x47\x95\xd4\x09\xe1\xa3\x6d",
        // Empty slot
        "\xbf\xf9\x6f\xd5\x94\x1e\xcf\xbb\x0f\x8c\x42\x98\xe7\x64\x6e\x75",
        // "IOMACAddress" - #M02L10S18
        "\x31\x37\x35\x29\x2b\x29\x4c\x4c\x5a\x4d\x5b\x5b\xe8\x23\xaf\x15",
        // "exit" - #M03L10S7e
        "\x1b\x06\x17\x0a\x7e\xc0\x74\x01\x4c\xf5\xe6\x8d\x83\xae\xd8\xb5",
        // Empty slot
        "\x13\x6c\xf6\x3c\x79\x1f\x4c\x31\x14\xb7\xf8\x7d\xce\x05\x2c\xac",
        // Empty slot
        "\x6e\x0d\x21\x6d\xd5\x70\x26\xdf\x3e\x8c\x31\x1c\x8f\xd1\x70\x15",
        // "1.5.1" - #M02L10Sffffffcd
        "\x64\x61\x68\x61\x64\x33\xe4\x1f\xc2\xfa\x54\xf8\x29\x5c\x5b\x80",
        // "/System/Library/Frameworks/IOKit.framework/IOKit" - #M02L40Sffffffef
        "\x40\x64\x8a\x84\x85\x76\x7e\x40\x5d\x7a\x73\x83\x72\x83\x8a\x40\x57\x83\x72\x7e\x76\x88\x80\x83\x7c\x84\x40\x5a\x60\x5c\x7a\x85\x3f\x77\x83\x72\x7e\x76\x88\x80\x83\x7c\x40\x5a\x60\x5c\x7a\x85\x11\x67\x05\xe1\x25\x39\x2e\xd3\xe8\x5e\xf2\xa6\xcd\xe5\x51\x6e",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" - #M02L50Sffffffb3
        "\x7c\xa0\xc6\xc0\xc1\xb2\xba\x7c\x99\xb6\xaf\xbf\xae\xbf\xc6\x7c\x93\xbf\xae\xba\xb2\xc4\xbc\xbf\xb8\xc0\x7c\x90\xbc\xbf\xb2\x93\xbc\xc2\xbb\xb1\xae\xc1\xb6\xbc\xbb\x7b\xb3\xbf\xae\xba\xb2\xc4\xbc\xbf\xb8\x7c\x90\xbc\xbf\xb2\x93\xbc\xc2\xbb\xb1\xae\xc1\xb6\xbc\xbb\x4d\x17\xcf\x97\xbc\xc9\x45\xc1\x81\x06\xe8\x08\xcc\x62",
        // "CFURLCreateWithFileSystemPathRelativeToBase" - #M03L30S70
        "\x33\x36\x25\x22\x3c\x33\x02\x15\x11\x04\x15\x27\x19\x04\x18\x36\x19\x1c\x15\x23\x09\x03\x04\x15\x1d\x20\x11\x04\x18\x22\x15\x1c\x11\x04\x19\x06\x15\x24\x1f\x32\x11\x03\x15\x70\x34\xed\x41\x72",
        // "CFArrayCreateMutable" - #M03L20Se8
        "\xab\xae\xa9\x9a\x9a\x89\x91\xab\x9a\x8d\x89\x9c\x8d\xa5\x9d\x9c\x89\x8a\x84\x8d\xe8\xd8\x17\x33\x4e\x50\x4c\x85\x68\x0e\x3c\x43",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" - #M03L30See
        "\x97\x97\x97\x97\xc9\xc3\xc9\xa3\xa3\xc9\xc3\xc9\x8a\x8a\xc9\xba\xc9\xa6\xa6\xc9\xd4\xc9\x83\x83\xc9\xd4\xc9\x9d\x9d\xc9\xb4\xc9\xee\x92\xaf\xc4\xe6\x66\xda\x80\xc9\x59\x4c\x9d\xbe\xcf\xca\x8c",
        // Empty slot
        "\xef\xb5\x05\x3d\x99\x5c\xdb\x12\x8b\x62\xb3\x27\x48\x5e\x94\x2f",
        // "CFRelease" - #M02L10S55
        "\xee\xf1\xfd\x10\x17\x10\x0c\x1e\x10\xab\xf9\xe2\x66\x71\x98\x2a",
        // Empty slot
        "\x4d\xb5\x67\xca\xd4\x9c\x05\xfd\x7d\x40\x37\x3c\x86\xef\x56\x01",
        // Empty slot
        "\x2c\x96\xca\xa6\xbd\xcd\x18\x3e\xbf\x6b\x06\x0b\x9b\x8a\xda\x41",
        // Empty slot
        "\x0f\xf0\xe5\x53\x4b\x80\xbe\xed\x89\x6e\x72\xf2\x9f\x0d\xfa\x4d",
        // Empty slot
        "\xa2\x47\x21\x3d\xc3\x0a\x55\x0b\xa6\x76\xe4\x81\x50\x85\x3e\x8f",
        // Empty slot
        "\xb6\xc8\xc9\x93\x50\x49\x06\xde\xf3\x82\x85\x7f\x0a\x0d\xe8\xb3",
        // "/System/Library/Frameworks/Security.framework/Security" - #M03L40S2f
        "\x00\x7c\x56\x5c\x5b\x4a\x42\x00\x63\x46\x4d\x5d\x4e\x5d\x56\x00\x69\x5d\x4e\x42\x4a\x58\x40\x5d\x44\x5c\x00\x7c\x4a\x4c\x5a\x5d\x46\x5b\x56\x01\x49\x5d\x4e\x42\x4a\x58\x40\x5d\x44\x00\x7c\x4a\x4c\x5a\x5d\x46\x5b\x56\x2f\xf7\x2f\x77\xf0\xe2\xe0\xdc\xbf\xb3",
        // Empty slot
        "\xc5\x90\x26\x1a\x39\x55\x03\x80\x39\x1d\x8a\xb8\x2f\x75\xe7\xab",
        // Empty slot
        "\x7b\xef\x6d\x1f\x02\xed\x64\xee\x82\x91\x16\xa8\xd1\x00\x08\x26",
        // Empty slot
        "\x3c\xc7\xf6\x98\x55\xc8\xa8\x0b\x4d\xd9\x25\x31\x46\x19\x79\x04",
        // "SecRequirementCreateWithStringAndErrors" - #M02L30S77
        "\xdc\xee\xec\xdb\xee\xfa\xfe\xf2\xfb\xee\xf6\xee\xf7\xfd\xcc\xfb\xee\xea\xfd\xee\xe0\xf2\xfd\xf1\xdc\xfd\xfb\xf2\xf7\xf0\xca\xf7\xed\xce\xfb\xfb\xf8\xfb\xfc\x89\x11\x63\x16\x4e\x4b\x24\x8e\x6b",
        // Empty slot
        "\x00\xf4\x68\x62\x3c\xe8\xab\x9f\x53\x5e\x23\xa0\xff\x3a\xd8\x2e",
        // Empty slot
        "\xcf\xb0\x92\xfd\x2f\xcd\x31\x76\xef\x79\xb6\xa0\xb0\x7c\x43\xe2",
        // "CFDataCreateMutable" - #M03L20Sab
        "\xe8\xed\xef\xca\xdf\xca\xe8\xd9\xce\xca\xdf\xce\xe6\xde\xdf\xca\xc9\xc7\xce\xab\xfc\xd2\xe8\x9d\x1b\xf0\x58\x4b\x06\x19\xe4\x42",
        // "SecStaticCodeCreateWithPath" - #M03L20Scc
        "\x9f\xa9\xaf\x9f\xb8\xad\xb8\xa5\xaf\x8f\xa3\xa8\xa9\x8f\xbe\xa9\xad\xb8\xa9\x9b\xa5\xb8\xa4\x9c\xad\xb8\xa4\xcc\x94\x4f\x30\x4c",
        // Empty slot
        "\x3d\xb8\x84\x30\x01\xcd\x4d\x0d\xf8\x46\x05\x58\x99\xda\xda\xd7",
        // "IORegistryEntryCreateCFProperty" - #M03L20S18
        "\x51\x57\x4a\x7d\x7f\x71\x6b\x6c\x6a\x61\x5d\x76\x6c\x6a\x61\x5b\x6a\x7d\x79\x6c\x7d\x5b\x5e\x48\x6a\x77\x68\x7d\x6a\x6c\x61\x18",
        // Empty slot
        "\xea\xac\x7b\xa5\x69\xfd\xc1\x1d\xb7\xb0\xdd\x0b\xe6\xdd\x51\x46",
        // Empty slot
        "\x66\xdd\x9b\xa7\xa1\xfd\x54\xf8\xc6\xe6\x82\x89\x64\x34\xb4\xd1",
        // Empty slot
        "\xc2\x06\xc3\xa4\x95\x65\x91\xf7\x52\xa7\x95\x5a\x2c\x50\xb9\xff",
        // "/usr/lib/libSystem.dylib" - #M03L20Sb4
        "\x9b\xc1\xc7\xc6\x9b\xd8\xdd\xd6\x9b\xd8\xdd\xd6\xe7\xcd\xc7\xc0\xd1\xd9\x9a\xd0\xcd\xd8\xdd\xd6\xb4\xdf\xcd\x45\x4b\xe1\x85\x61",
        // "/usr/lib/libSystem.dylib" - #M02L20S10
        "\x1f\x65\x63\x62\x1f\x5c\x59\x52\x1f\x5c\x59\x52\x43\x69\x63\x64\x55\x5d\x1e\x54\x69\x5c\x59\x52\xf0\xd2\xfd\xa8\x7c\x89\xde\x67",
        // Empty slot
        "\x7f\x1e\xd5\x0f\x76\xa5\x22\x18\xe9\x75\xe2\xc4\x67\x5c\x8c\xc0",
        // Empty slot
        "\x5e\x36\x76\x8c\xb0\x01\x8c\x67\x5d\x7c\xd1\x91\x87\xae\xd6\xae",
        // "1.5.1" - #M02L10S1a
        "\x17\x14\x1b\x14\x17\xe6\xe9\xcc\x99\x0b\x98\x30\x50\x60\x59\xfd",
        // Empty slot
        "\xfd\x0d\xa7\x9f\xcd\x58\x45\x02\xa8\x8c\x2d\x09\xb4\x90\x6a\xeb",
        // Empty slot
        "\x49\x18\x88\x9a\xc8\x0b\x28\xd1\x21\xc7\x68\xd6\xd8\xca\xd2\xe7",
        // Empty slot
        "\xcc\x56\x96\x5d\xa7\xfb\x55\x72\xed\x5e\x03\x16\x38\x80\x3e\x8c",
        // Empty slot
        "\x5b\x09\x29\xb1\xd5\x0c\xdb\x15\x40\x50\x09\x6f\xb0\x4a\xad\x35",
        // "CC_SHA1_Final" - #M02L10Sffffffb3
        "\x90\x90\xac\xa0\x95\x8e\x7e\xac\x93\xb6\xbb\xae\xb9\x4d\x97\x77",
        // "CFDateFormatterCreate" - #M03L20S1f
        "\x5c\x59\x5b\x7e\x6b\x7a\x59\x70\x6d\x72\x7e\x6b\x6b\x7a\x6d\x5c\x6d\x7a\x7e\x6b\x7a\x1f\x31\xf8\x84\x9c\x12\xc9\x45\x9f\xa5\x27",
        // Empty slot
        "\x9f\xcf\x05\x9e\x58\xe9\xad\xbc\xbd\x7e\x71\x17\x35\x1c\xf5\x0c",
        // Empty slot
        "\x86\x17\xcd\x69\x19\x88\x3a\x97\xb7\xc7\x57\x08\xa3\x6b\xc5\x31",
        // Empty slot
        "\xa1\x85\xa4\x20\x4b\x21\x97\x4f\x82\x11\xe3\x6c\xf3\x52\xda\xa8",
        // "CFDictionaryAddValue" - #M03L20Sea
        "\xa9\xac\xae\x83\x89\x9e\x83\x85\x84\x8b\x98\x93\xab\x8e\x8e\xbc\x8b\x86\x9f\x8f\xea\xa7\xd9\x0e\xcd\x4f\x18\x55\x14\xd4\xdd\xf5",
        // "CMSDecoderCopySignerStatus" - #M02L20Sffffffa1
        "\xa2\xac\xb2\xa3\xc4\xc2\xce\xc3\xc4\xd1\xa2\xce\xcf\xd8\xb2\xc8\xc6\xcd\xc4\xd1\xb2\xd3\xc0\xd3\xd4\xd2\x5f\x18\x44\xd8\xef\x42",
        // "CFBundleShortVersionString" - #M03L20S91
        "\xd2\xd7\xd3\xe4\xff\xf5\xfd\xf4\xc2\xf9\xfe\xe3\xe5\xc7\xf4\xe3\xe2\xf8\xfe\xff\xc2\xe5\xe3\xf8\xff\xf6\x91\x3b\xab\xa3\xc3\x22",
        // "NSApplicationMain" - #M03L20Scf
        "\x81\x9c\x8e\xbf\xbf\xa3\xa6\xac\xae\xbb\xa6\xa0\xa1\x82\xae\xa6\xa1\xcf\x84\x95\xc1\xae\x41\x3e\xb5\x9f\xc4\x0b\x52\xeb\x9e\x48",
        // Empty slot
        "\x99\x41\x17\xa8\xa6\x41\x6f\x6e\x2e\x80\xfa\x37\x9e\x8b\x25\x6d",
        // Empty slot
        "\xfb\x60\x33\xc9\x29\xa2\x31\xde\x7d\x8b\x51\x70\xe2\xf9\x27\x48",
        // "CFDataGetLength" - #M02L10Sffffffb5
        "\x8e\x91\x8f\xac\xbf\xac\x92\xb0\xbf\x97\xb0\xb9\xb2\xbf\xb3\x4b",
        // Empty slot
        "\x99\xd7\x0e\x6b\xcc\x39\x0b\x33\x89\x44\xed\x81\xf7\xf4\x1e\xa4",
        // "CMSDecoderCopyContent" - #M03L20S6d
        "\x2e\x20\x3e\x29\x08\x0e\x02\x09\x08\x1f\x2e\x02\x1d\x14\x2e\x02\x03\x19\x08\x03\x19\x6d\xaa\xa5\x45\x21\xd7\x63\xdf\xc8\xa9\x3b",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" - #M03L50S1b
        "\x34\x48\x62\x68\x6f\x7e\x76\x34\x57\x72\x79\x69\x7a\x69\x62\x34\x5d\x69\x7a\x76\x7e\x6c\x74\x69\x70\x68\x34\x58\x74\x69\x7e\x5d\x74\x6e\x75\x7f\x7a\x6f\x72\x74\x75\x35\x7d\x69\x7a\x76\x7e\x6c\x74\x69\x70\x34\x58\x74\x69\x7e\x5d\x74\x6e\x75\x7f\x7a\x6f\x72\x74\x75\x1b\xbf\x38\x09\xcc\x06\x95\x38\x62\x21\x88\xc1\x7e\xf3",
        // "CMSDecoderCreate" - #M02L20S62
        "\xe1\xeb\xf1\xe2\x03\x01\x0d\x02\x03\x10\xe1\x10\x03\xff\x12\x03\x9e\x79\x8a\x44\xf9\x41\x33\xa0\x6a\xfb\xc8\xdd\x2a\xaf\x20\x00",
        // Empty slot
        "\x93\x58\x1a\x82\x70\xe1\x81\x50\xa8\x40\x99\x3a\x74\x36\x62\xfa",
        // "CFArrayAppendValue" - #M02L20Sffffffc0
        "\x83\x86\x81\xb2\xb2\xa1\xb9\x81\xb0\xb0\xa5\xae\xa4\x96\xa1\xac\xb5\xa5\x40\xf1\xb4\x5c\x8c\x02\x8f\xa9\x48\xa4\x1d\x56\x73\xdf",
        // "CC_SHA1_Update" - #M02L10S65
        "\xde\xde\xfa\xee\xe3\xdc\xcc\xfa\xf0\x0b\xff\xfc\x0f\x00\x9b\x8b",
        // "CFBundleCopyBundleURL" - #M02L20S65
        "\xde\xe1\xdd\x10\x09\xff\x07\x00\xde\x0a\x0b\x14\xdd\x10\x09\xff\x07\x00\xf0\xed\xe7\x9b\xa5\x20\xd7\xb4\x9c\x8f\x6e\xc9\x97\x99",
        // "/System/Library/Frameworks/IOKit.framework/IOKit" - #M02L40S19
        "\x16\x3a\x60\x5a\x5b\x4c\x54\x16\x33\x50\x49\x59\x48\x59\x60\x16\x2d\x59\x48\x54\x4c\x5e\x56\x59\x52\x5a\x16\x30\x36\x32\x50\x5b\x15\x4d\x59\x48\x54\x4c\x5e\x56\x59\x52\x16\x30\x36\x32\x50\x5b\xe7\xfa\x9a\x40\xba\xf0\x7f\xa3\x5f\x2e\x79\x53\x06\x06\x45\x6f",
        // Empty slot
        "\xf7\xb5\x4a\x1d\x94\x30\x4f\x56\xcc\xdb\xaf\xa7\x31\x4f\x5c\x2d",
        // Empty slot
        "\xe3\x11\xd7\xa7\x84\xf1\xe6\x9e\xdf\x58\x21\xaf\xa5\xdb\xe3\x32",
        // Empty slot
        "\x77\x11\xd2\x50\xc2\xce\x47\x66\x74\x09\xaa\xc9\x5d\x8f\x6a\x09",
        // "SecRequirementCreateWithString" - #M02L20Sfffffff2
        "\x61\x73\x71\x60\x73\x7f\x83\x77\x80\x73\x7b\x73\x7c\x82\x51\x80\x73\x6f\x82\x73\x65\x77\x82\x76\x61\x82\x80\x77\x7c\x75\x0e\x81",
        // Empty slot
        "\x60\x40\x18\xc5\x90\x86\x16\xc4\x3e\x38\x4a\x44\x6d\x80\x0e\x66",
        // Empty slot
        "\x66\xa5\xfc\x68\xf1\xcd\xc3\xda\xb0\x96\x8e\xbf\x60\x5f\x87\x1a",
        // "CMSDecoderFinalizeMessage" - #M03L20S32
        "\x71\x7f\x61\x76\x57\x51\x5d\x56\x57\x40\x74\x5b\x5c\x53\x5e\x5b\x48\x57\x7f\x57\x41\x41\x53\x55\x57\x32\xdb\xe9\x4a\x21\x78\x4c",
        // Empty slot
        "\x1a\xe9\x64\x60\x6d\x62\x23\x11\xab\x2c\x53\x5a\xdd\x7a\xa3\x9a",
        // Empty slot
        "\x59\x13\x3a\x9e\x2e\x0a\x81\x46\x26\x2f\x60\x30\x19\xb4\xa1\x2d",
        // "CFDataAppendBytes" - #M03L20S68
        "\x2b\x2e\x2c\x09\x1c\x09\x29\x18\x18\x0d\x06\x0c\x2a\x11\x1c\x0d\x1b\x68\x4f\x7c\x54\x1b\xe3\xa3\x6d\x05\xbc\x8e\x16\x6e\xc8\x04",
        // Empty slot
        "\x8c\x1d\xf1\x13\xa3\x94\xc2\xcb\x4c\xe9\x2d\x53\x9f\xb8\x58\x6a",
        // "dlsym" - #M02L10Sffffffe8
        "\x7c\x84\x8b\x91\x85\x18\x2d\xe2\xc6\x53\x64\x41\x38\xc2\xbb\x23",
        // Empty slot
        "\x70\x5e\x5e\x30\x46\xd3\x79\xec\x5c\x46\x6f\x5a\xbf\x8f\x4e\xe0",
        // Empty slot
        "\xe0\x6a\x2c\x8a\xda\xea\x42\xee\xa3\xdc\x3f\xfd\xc3\xad\xcc\x39",
        // Empty slot
        "\xd3\x19\xc0\xbf\xf4\x12\xdf\xac\x3d\x86\xe6\x18\xb9\xd8\x89\x5d",
        // "CFBundleGetIdentifier" - #M03L20S8c
        "\xcf\xca\xce\xf9\xe2\xe8\xe0\xe9\xcb\xe9\xf8\xc5\xe8\xe9\xe2\xf8\xe5\xea\xe5\xe9\xfe\x8c\xa4\xa1\xc5\x6a\x4e\xa0\x29\x2d\x2e\x9e",
        // "SecStaticCodeCheckValidityWithErrors" - #M02L30S39
        "\x1a\x2c\x2a\x1a\x3b\x28\x3b\x30\x2a\x0a\x36\x2b\x2c\x0a\x2f\x2c\x2a\x32\x1d\x28\x33\x30\x2b\x30\x3b\x40\x1e\x30\x3b\x2f\x0c\x39\x39\x36\x39\x3a\xc7\x52\x4e\xcd\x9a\x7d\xd7\x1d\x82\x2e\xd2\xc7",
        // Empty slot
        "\x45\x51\x13\xa1\xf5\xab\x9d\x36\x8b\x45\x70\x87\xdf\x67\x0d\xaf",
        // "/System/Library/Frameworks/Security.framework/Security" - #M03L40Sd0
        "\xff\x83\xa9\xa3\xa4\xb5\xbd\xff\x9c\xb9\xb2\xa2\xb1\xa2\xa9\xff\x96\xa2\xb1\xbd\xb5\xa7\xbf\xa2\xbb\xa3\xff\x83\xb5\xb3\xa5\xa2\xb9\xa4\xa9\xfe\xb6\xa2\xb1\xbd\xb5\xa7\xbf\xa2\xbb\xff\x83\xb5\xb3\xa5\xa2\xb9\xa4\xa9\xd0\x18\xab\x93\x35\xe0\x75\x07\x2d\x03",
        // Empty slot
        "\x09\xe8\x73\xa6\xd5\x75\x57\x82\x24\xdb\x77\x38\xf5\x97\x51\x6d",
        // Empty slot
        "\x50\xfa\x8d\x3c\xce\x65\x2c\x23\x0f\xd7\x4b\x4e\x3c\x69\x55\xba",
        // "CMSDecoderUpdateMessage" - #M02L20S2a
        "\x19\x23\x29\x1a\x3b\x39\x45\x3a\x3b\x48\x2b\x46\x3a\x37\x4a\x3b\x23\x3b\x49\x49\x37\x3d\x3b\xd6\xa6\x1e\x93\x26\xba\xa5\x49\x12",
        // "CFDictionaryCreateMutable" - #M03L20Sb2
        "\xf1\xf4\xf6\xdb\xd1\xc6\xdb\xdd\xdc\xd3\xc0\xcb\xf1\xc0\xd7\xd3\xc6\xd7\xff\xc7\xc6\xd3\xd0\xde\xd7\xb2\xb7\x33\x67\xaa\x96\x22",
        // Empty slot
        "\x62\x0b\xa1\x80\xe2\xf1\x0c\xd7\x00\x19\x14\xb9\xdc\x38\x09\x67",
        // "CC_SHA1_Init" - #M02L10S19
        "\x2a\x2a\x46\x3a\x2f\x28\x18\x46\x30\x55\x50\x5b\xe7\x16\xa5\x68",
        // "SecStaticCodeCheckValidity" - #M03L20S60
        "\x33\x05\x03\x33\x14\x01\x14\x09\x03\x23\x0f\x04\x05\x23\x08\x05\x03\x0b\x36\x01\x0c\x09\x04\x09\x14\x19\x60\xfd\x2a\x8f\x88\xaf",
        // "IOObjectRelease" - #M02L10Sffffffa0
        "\xa9\xaf\xaf\xc2\xca\xc5\xc3\xd4\xb2\xc5\xcc\xc5\xc1\xd3\xc5\x60",
        // "CFStringCreateWithCString" - #M03L20S8c
        "\xcf\xca\xdf\xf8\xfe\xe5\xe2\xeb\xcf\xfe\xe9\xed\xf8\xe9\xdb\xe5\xf8\xe4\xcf\xdf\xf8\xfe\xe5\xe2\xeb\x8c\x66\x30\xa3\x8f\x36\x39",
        // Empty slot
        "\x35\x98\x3b\x91\x2a\xa3\x5a\x4e\x86\x67\x04\x54\x92\x65\x76\x4c",
        // Empty slot
        "\xda\x5d\x24\x3c\xba\x19\x63\xe9\xc4\xf4\x00\x3d\x3a\x88\xc9\xc0",
        // Empty slot
        "\x50\xe4\x49\xe8\xd6\xf0\x43\x15\x31\x43\x5c\xa6\x37\xf2\x74\x17",
        // "SecAsn1CoderCreate" - #M03L20S44
        "\x17\x21\x27\x05\x37\x2a\x75\x07\x2b\x20\x21\x36\x07\x36\x21\x25\x30\x21\x44\xea\x88\xa4\xe7\x60\xb7\x68\x00\x1e\x82\x10\x95\x81",
        // Empty slot
        "\x54\x20\xb8\x9f\xfd\x80\x9e\x74\x47\x57\x47\x42\xcd\x69\x0b\x71",
        // "SecAsn1Decode" - #M03L10S53
        "\x00\x36\x30\x12\x20\x3d\x62\x17\x36\x30\x3c\x37\x36\x53\xd5\x71",
        // Empty slot
        "\x36\xc0\xf7\xec\x2d\x84\xd8\xc2\x09\x03\x83\x1b\x1b\xe2\x4a\x50",
        // "CFBundleGetMainBundle" - #M03L20Sca
        "\x89\x8c\x88\xbf\xa4\xae\xa6\xaf\x8d\xaf\xbe\x87\xab\xa3\xa4\x88\xbf\xa4\xae\xa6\xaf\xca\x41\x30\x44\x06\x30\xcc\xc7\x60\xab\x96",
        // Empty slot
        "\xac\xa8\xf5\xf8\xbb\x5f\xb5\xdf\xad\x88\xf0\xea\xc2\xbf\x3c\x6e",
        // Empty slot
        "\x3a\x58\x23\x1b\xd7\x91\xcc\x04\x73\x10\xa9\x04\xc5\x3e\xbf\x68",
        // "/System/Library/Frameworks/IOKit.framework/IOKit" - #M02L40S47
        "\xe8\x0c\x32\x2c\x2d\x1e\x26\xe8\x05\x22\x1b\x2b\x1a\x2b\x32\xe8\xff\x2b\x1a\x26\x1e\x30\x28\x2b\x24\x2c\xe8\x02\x08\x04\x22\x2d\xe7\x1f\x2b\x1a\x26\x1e\x30\x28\x2b\x24\xe8\x02\x08\x04\x22\x2d\xb9\xf3\x9d\x3d\x2e\x69\x2c\xbd\xfb\x1b\x81\x69\x28\xa8\xc3\x9c",
        // Empty slot
        "\xaa\xbf\x51\xe3\xa7\x4c\x34\xc8\x86\x9f\xc8\x12\xad\x47\xf6\x05",
        // Empty slot
        "\x90\x73\x71\x16\x1d\x0c\x90\x44\xfe\x35\xa7\xd8\xb8\x69\xaa\xe5",
        // Empty slot
        "\x01\x51\x21\xb0\x12\xf5\x78\x35\xc8\xb0\xaa\xc0\x74\xc0\x73\x2f",
        // Empty slot
        "\x11\x74\x5d\xed\x85\x55\xbd\xc4\xbe\x00\xc1\xf6\x39\x3f\x50\x51",
        // "CFStringCompare" - #M02L10S32
        "\x11\x14\x21\x42\x40\x37\x3c\x35\x11\x3d\x3b\x3e\x2f\x40\x33\xce",
        // "IOBSDNameMatching" - #M03L20Sd3
        "\x9a\x9c\x91\x80\x97\x9d\xb2\xbe\xb6\x9e\xb2\xa7\xb0\xbb\xba\xbd\xb4\xd3\xb7\x48\xf2\xed\x97\x03\x4d\xe3\x0c\x19\x58\xe6\xbd\x6b",
        // Empty slot
        "\xd6\x18\x67\xec\xd3\x36\x91\x60\x62\xfd\xb9\x2f\x87\x3a\x86\x39",
        // Empty slot
        "\x77\xa6\x16\xc1\x2f\x6a\x95\xaf\x7a\x08\x48\x25\x21\x42\xa3\x68",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" - #M02L50Sffffff85
        "\xaa\xce\xf4\xee\xef\xe0\xe8\xaa\xc7\xe4\xdd\xed\xdc\xed\xf4\xaa\xc1\xed\xdc\xe8\xe0\xf2\xea\xed\xe6\xee\xaa\xbe\xea\xed\xe0\xc1\xea\xf0\xe9\xdf\xdc\xef\xe4\xea\xe9\xa9\xe1\xed\xdc\xe8\xe0\xf2\xea\xed\xe6\xaa\xbe\xea\xed\xe0\xc1\xea\xf0\xe9\xdf\xdc\xef\xe4\xea\xe9\x7b\x42\x85\x5f\xcf\x1f\x1a\x81\x46\x79\x21\x7e\xf2\x7e",
        // "com.greyfade.qrslateimporter" - #M02L20Sffffffd2
        "\x91\x9d\x9b\x5c\x95\xa0\x93\xa7\x94\x8f\x92\x93\x5c\x9f\xa0\xa1\x9a\x8f\xa2\x93\x97\x9b\x9e\x9d\xa0\xa2\x93\xa0\x2e\x2f\xf0\xc1",
        // "CFURLCreateCopyAppendingPathComponent" - #M02L30Sffffff9c
        "\xa7\xaa\xb9\xb6\xb0\xa7\xd6\xc9\xc5\xd8\xc9\xa7\xd3\xd4\xdd\xa5\xd4\xd4\xc9\xd2\xc8\xcd\xd2\xcb\xb4\xc5\xd8\xcc\xa7\xd3\xd1\xd4\xd3\xd2\xc9\xd2\xd8\x64\x2e\x2a\xc7\x33\x6f\x38\x86\x06\x68\x75",
        // "CFDateFormatterSetFormat" - #M03L20S89
        "\xca\xcf\xcd\xe8\xfd\xec\xcf\xe6\xfb\xe4\xe8\xfd\xfd\xec\xfb\xda\xec\xfd\xcf\xe6\xfb\xe4\xe8\xfd\x89\x7c\x3d\x70\x9c\x4c\xf8\xef",
        // Empty slot
        "\x4d\xad\x07\x44\x39\x38\xa9\xd7\xfc\xb6\xd6\xc3\x26\x53\x2f\x0e",
        // Empty slot
        "\x85\xb9\xae\x14\x1d\x0e\xae\x6e\xca\xba\xe5\x8f\xfc\x59\xb6\x8a",
        // "CFDataGetBytePtr" - #M03L20S41
        "\x02\x07\x05\x20\x35\x20\x06\x24\x35\x03\x38\x35\x24\x11\x35\x33\x41\xe6\x0a\xbc\x79\xce\x1f\x2c\xa3\x39\xce\x3d\x28\xec\x51\x1a",
        // "/System/Library/Frameworks/AppKit.framework/AppKit" - #M02L40Sfffffff2
        "\x3d\x61\x87\x81\x82\x73\x7b\x3d\x5a\x77\x70\x80\x6f\x80\x87\x3d\x54\x80\x6f\x7b\x73\x85\x7d\x80\x79\x81\x3d\x4f\x7e\x7e\x59\x77\x82\x3c\x74\x80\x6f\x7b\x73\x85\x7d\x80\x79\x3d\x4f\x7e\x7e\x59\x77\x82\x0e\x55\xf1\x9a\x83\x2d\x70\x4e\xed\xaa\x68\x76\x99\x3d",
        // Empty slot
        "\x00\x02\x58\xc3\x14\x33\x0a\x69\x21\x5d\x13\x1b\x4c\x87\x01\x0b",
        // "CFDateFormatterCreateDateFromString" - #M02L30Sffffffaf
        "\x94\x97\x95\xb2\xc5\xb6\x97\xc0\xc3\xbe\xb2\xc5\xc5\xb6\xc3\x94\xc3\xb6\xb2\xc5\xb6\x95\xb2\xc5\xb6\x97\xc3\xc0\xbe\xa4\xc5\xc3\xba\xbf\xb8\x51\x6d\x1c\x87\x11\xe5\x75\xe5\x64\x34\xbe\x03\x74",
        // "CFEqual" - #M03L10Sc6
        "\x85\x80\x83\xb7\xb3\xa7\xaa\xc6\xa3\x14\x3e\x06\x67\x3c\xeb\xa0",
        // "CFNumberCreate" - #M03L10S59
        "\x1a\x1f\x17\x2c\x34\x3b\x3c\x2b\x1a\x2b\x3c\x38\x2d\x3c\x59\x32",
        // Empty slot
        "\x3d\x8e\x40\x92\x45\x49\xb1\xc3\xac\x05\xeb\x75\x24\x76\xcd\x92",
        // Empty slot
        "\x95\x79\xaf\x0b\x06\xa8\x0c\x79\x7b\x1f\xd4\x8b\xc8\x64\xbd\x07",
        // "CFURLCreateDataAndPropertiesFromResource" - #M02L30Sffffff89
        "\xba\xbd\xcc\xc9\xc3\xba\xe9\xdc\xd8\xeb\xdc\xbb\xd8\xeb\xd8\xb8\xe5\xdb\xc7\xe9\xe6\xe7\xdc\xe9\xeb\xe0\xdc\xea\xbd\xe9\xe6\xe4\xc9\xdc\xea\xe6\xec\xe9\xda\xdc\x77\x19\x3e\x83\xa0\x8b\x13\x9c",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" - #M03L50Sd2
        "\xfd\x81\xab\xa1\xa6\xb7\xbf\xfd\x9e\xbb\xb0\xa0\xb3\xa0\xab\xfd\x94\xa0\xb3\xbf\xb7\xa5\xbd\xa0\xb9\xa1\xfd\x91\xbd\xa0\xb7\x94\xbd\xa7\xbc\xb6\xb3\xa6\xbb\xbd\xbc\xfc\xb4\xa0\xb3\xbf\xb7\xa5\xbd\xa0\xb9\xfd\x91\xbd\xa0\xb7\x94\xbd\xa7\xbc\xb6\xb3\xa6\xbb\xbd\xbc\xd2\x01\x6b\xf2\xdb\xce\x29\x9d\x8a\x26\x27\xa0\x0d\x03",
        // "/usr/lib/libSystem.dylib" - #M03L20Se2
        "\xcd\x97\x91\x90\xcd\x8e\x8b\x80\xcd\x8e\x8b\x80\xb1\x9b\x91\x96\x87\x8f\xcc\x86\x9b\x8e\x8b\x80\xe2\xd1\x7c\xf5\x59\xb5\xf2\x6e",
        // Empty slot
        "\x0d\xe0\xa4\x87\x35\x3f\xbd\x6d\x6c\xdf\x13\x08\x2c\x61\x5d\xa7",
        // "CFStringCreateWithBytes" - #M03L20Sa8
        "\xeb\xee\xfb\xdc\xda\xc1\xc6\xcf\xeb\xda\xcd\xc9\xdc\xcd\xff\xc1\xdc\xc0\xea\xd1\xdc\xcd\xdb\xa8\x0f\x78\x9c\xcb\xb0\x59\x42\xa0",
        // Empty slot
        "\xe1\xf4\x46\xc1\xbe\x9c\x4e\x36\x80\x5f\xee\xbd\x14\x71\x05\x3e",
        // Empty slot
        "\x98\x0b\x61\x1b\x49\x6b\x35\xee\x97\xbb\xc4\x44\xea\x6f\x2b\x45",
        // Empty slot
        "\x9e\x74\x9d\x0a\x4f\x4b\x01\xce\x47\x98\x25\x19\xf6\x51\x38\x7e",
        // "CFDataCreate" - #M03L10S52
        "\x11\x14\x16\x33\x26\x33\x11\x20\x37\x33\x26\x37\x52\x55\xc3\x92",
        // "/usr/lib/libSystem.dylib" - #M02L20S47
        "\xe8\x2e\x2c\x2b\xe8\x25\x22\x1b\xe8\x25\x22\x1b\x0c\x32\x2c\x2d\x1e\x26\xe7\x1d\x32\x25\x22\x1b\xb9\x96\xeb\xb0\x9b\x29\x79\x13",
        // "CMSDecoderGetNumSigners" - #M02L20Sfffffffe
        "\x45\x4f\x55\x46\x67\x65\x71\x66\x67\x74\x49\x67\x76\x50\x77\x6f\x55\x6b\x69\x70\x67\x74\x75\x02\x2b\x35\x28\xa9\x8e\xc4\xdd\x08",
        // Empty slot
        "\x47\x58\x43\xe7\x76\xed\x7c\x9c\x55\xd2\x24\xb3\x4d\x03\x34\xb2",
        // "en0" - #M03L10Sc0
        "\xa5\xae\xf0\xc0\x9e\x55\x4c\x1f\x71\xc7\x83\xb3\xf6\xd0\x32\xe2",
        // Empty slot
        "\x17\x55\x98\xfa\x7b\xb4\x06\x1a\xc4\x09\xd7\x61\xf5\x48\x72\xfa",
        // "/System/Library/Frameworks/Security.framework/Security" - #M02L40Sffffffb3
        "\x7c\xa0\xc6\xc0\xc1\xb2\xba\x7c\x99\xb6\xaf\xbf\xae\xbf\xc6\x7c\x93\xbf\xae\xba\xb2\xc4\xbc\xbf\xb8\xc0\x7c\xa0\xb2\xb0\xc2\xbf\xb6\xc1\xc6\x7b\xb3\xbf\xae\xba\xb2\xc4\xbc\xbf\xb8\x7c\xa0\xb2\xb0\xc2\xbf\xb6\xc1\xc6\x4d\x3e\x4a\xff\x05\xd2\x4d\x42\x67\x81",
        // "Contents/_MASReceipt/receipt" - #M02L20S55
        "\xee\x1a\x19\x1f\x10\x19\x1f\x1e\xda\x0a\xf8\xec\xfe\xfd\x10\x0e\x10\x14\x1b\x1f\xda\x1d\x10\x0e\x10\x14\x1b\x1f\xab\xd0\xd5\x4d",
        // "IOIteratorNext" - #M03L10S92
        "\xdb\xdd\xdb\xe6\xf7\xe0\xf3\xe6\xfd\xe0\xdc\xf7\xea\xe6\x92\xd2",
        // Empty slot
        "\x65\xf2\x20\x37\x22\x27\x10\xec\x5c\x47\x72\x54\xcf\x4d\xc7\x2d",
        // Empty slot
        "\xd3\x1c\x42\x94\x5c\xef\x0b\x4c\xf2\x51\xc6\x3f\xca\x54\x8c\x69",
        // "SecPolicyCreateBasicX509" - #M02L20S32
        "\x21\x33\x31\x1e\x3d\x3a\x37\x31\x47\x11\x40\x33\x2f\x42\x33\x10\x2f\x41\x37\x31\x26\x03\xfe\x07\xce\x0b\x15\x31\xcf\x66\x7f\x18",
        // "anchor apple generic" - #M03L20S73
        "\x12\x1d\x10\x1b\x1c\x01\x53\x12\x03\x03\x1f\x16\x53\x14\x16\x1d\x16\x01\x1a\x10\x73\x6a\x74\xda\xfd\xce\x75\xd4\x50\xd5\x74\x9a",
        // "IOMasterPort" - #M02L10Sfffffffc
        "\x4d\x53\x51\x65\x77\x78\x69\x76\x54\x73\x76\x78\x04\xb5\xf9\xe5",
        // "CC_SHA1" - #M02L10Sffffffe2
        "\x61\x61\x7d\x71\x66\x5f\x4f\x1e\x3e\x74\x46\xeb\x29\x16\x6c\x2f",
        // Empty slot
        "\x75\xdc\x40\xf8\x33\xe7\xea\xea\x82\x7c\xb8\xe7\x58\x17\x0e\x77",
        // "IORegistryEntryGetParentEntry" - #M02L20Sfffffff3
        "\x56\x5c\x5f\x72\x74\x76\x80\x81\x7f\x86\x52\x7b\x81\x7f\x86\x54\x72\x81\x5d\x6e\x7f\x72\x7b\x81\x52\x7b\x81\x7f\x86\x0d\x76\xa2",
        // "SecAsn1CoderRelease" - #M03L20S49
        "\x1a\x2c\x2a\x08\x3a\x27\x78\x0a\x26\x2d\x2c\x3b\x1b\x2c\x25\x2c\x28\x3a\x2c\x49\x6b\xdd\xaf\x36\x5b\xe1\x4a\xef\xb9\x75\x43\xae",
        // Empty slot
        "\x16\x86\x9b\xb5\x7d\x1d\x6e\xfc\x7d\x44\xf6\x2a\xf3\x28\x02\x72",
    };
    
    
    //
    // Table for storing various pointers
    //
    static void *ReceiptValidation_pointers[0x009e] = {
        ((void *) dlopen), 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        ((void *) dlsym), 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        ((void *) CFStringCreateWithCString), 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        ((void *) CFStringCreateWithBytes), 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
        NULL, 
    };
    
    
    //
    // Function pointer for string decryption
    //
    typedef void (*ReceiptValidation_decrypt)(const char *p1, char *p2, char p3, int p4);
    
    // Function pointer for 'CC_SHA1'
    typedef unsigned char *(*_ReceiptValidation_CC_SHA1_)(const void *data, CC_LONG len, unsigned char *md);
    // Function pointer for 'CC_SHA1_Final'
    typedef int (*_ReceiptValidation_CC_SHA1_Final_)(unsigned char *md, CC_SHA1_CTX *c);
    // Function pointer for 'CC_SHA1_Init'
    typedef int (*_ReceiptValidation_CC_SHA1_Init_)(CC_SHA1_CTX *c);
    // Function pointer for 'CC_SHA1_Update'
    typedef int (*_ReceiptValidation_CC_SHA1_Update_)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
    // Function pointer for 'CFArrayAppendValue'
    typedef void (*_ReceiptValidation_CFArrayAppendValue_)(CFMutableArrayRef theArray, const void *value);
    // Function pointer for 'CFArrayCreateMutable'
    typedef CFMutableArrayRef (*_ReceiptValidation_CFArrayCreateMutable_)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
    // Function pointer for 'CFBundleCopyBundleURL'
    typedef CFURLRef (*_ReceiptValidation_CFBundleCopyBundleURL_)(CFBundleRef bundle);
    // Function pointer for 'CFBundleGetIdentifier'
    typedef CFStringRef (*_ReceiptValidation_CFBundleGetIdentifier_)(CFBundleRef bundle);
    // Function pointer for 'CFBundleGetMainBundle'
    typedef CFBundleRef (*_ReceiptValidation_CFBundleGetMainBundle_)();
    // Function pointer for 'CFBundleGetValueForInfoDictionaryKey'
    typedef CFTypeRef (*_ReceiptValidation_CFBundleGetValueForInfoDictionaryKey_)(CFBundleRef bundle, CFStringRef key);
    // Function pointer for 'CFDataAppendBytes'
    typedef void (*_ReceiptValidation_CFDataAppendBytes_)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
    // Function pointer for 'CFDataCreate'
    typedef CFDataRef (*_ReceiptValidation_CFDataCreate_)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
    // Function pointer for 'CFDataCreateMutable'
    typedef CFMutableDataRef (*_ReceiptValidation_CFDataCreateMutable_)(CFAllocatorRef allocator, CFIndex capacity);
    // Function pointer for 'CFDataGetBytePtr'
    typedef const UInt8 *(*_ReceiptValidation_CFDataGetBytePtr_)(CFDataRef theData);
    // Function pointer for 'CFDataGetLength'
    typedef CFIndex (*_ReceiptValidation_CFDataGetLength_)(CFDataRef theData);
    // Function pointer for 'CFDateFormatterCreate'
    typedef CFDateFormatterRef (*_ReceiptValidation_CFDateFormatterCreate_)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
    // Function pointer for 'CFDateFormatterCreateDateFromString'
    typedef CFDateRef (*_ReceiptValidation_CFDateFormatterCreateDateFromString_)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
    // Function pointer for 'CFDateFormatterSetFormat'
    typedef void (*_ReceiptValidation_CFDateFormatterSetFormat_)(CFDateFormatterRef formatter, CFStringRef formatString);
    // Function pointer for 'CFDictionaryAddValue'
    typedef void (*_ReceiptValidation_CFDictionaryAddValue_)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Function pointer for 'CFDictionaryCreateMutable'
    typedef CFMutableDictionaryRef (*_ReceiptValidation_CFDictionaryCreateMutable_)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
    // Function pointer for 'CFDictionaryGetValue'
    typedef const void *(*_ReceiptValidation_CFDictionaryGetValue_)(CFDictionaryRef theDict, const void *key);
    // Function pointer for 'CFEqual'
    typedef Boolean (*_ReceiptValidation_CFEqual_)(CFTypeRef cf1, CFTypeRef cf2);
    // Function pointer for 'CFNumberCreate'
    typedef CFNumberRef (*_ReceiptValidation_CFNumberCreate_)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
    // Function pointer for 'CFRelease'
    typedef void (*_ReceiptValidation_CFRelease_)(CFTypeRef cf);
    // Function pointer for 'CFStringCompare'
    typedef CFComparisonResult (*_ReceiptValidation_CFStringCompare_)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
    // Function pointer for 'CFStringCreateWithBytes'
    typedef CFStringRef (*_ReceiptValidation_CFStringCreateWithBytes_)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
    // Function pointer for 'CFStringCreateWithCString'
    typedef CFStringRef (*_ReceiptValidation_CFStringCreateWithCString_)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
    // Function pointer for 'CFURLCreateCopyAppendingPathComponent'
    typedef CFURLRef (*_ReceiptValidation_CFURLCreateCopyAppendingPathComponent_)(CFAllocatorRef allocator, CFURLRef url, CFStringRef pathComponent, Boolean isDirectory);
    // Function pointer for 'CFURLCreateDataAndPropertiesFromResource'
    typedef Boolean (*_ReceiptValidation_CFURLCreateDataAndPropertiesFromResource_)(CFAllocatorRef alloc, CFURLRef url, CFDataRef *resourceData, CFDictionaryRef *properties, CFArrayRef desiredProperties, SInt32 *errorCode);
    // Function pointer for 'CFURLCreateWithFileSystemPathRelativeToBase'
    typedef CFURLRef (*_ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase_)(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL);
    // Function pointer for 'CMSDecoderCopyContent'
    typedef OSStatus (*_ReceiptValidation_CMSDecoderCopyContent_)(CMSDecoderRef cmsDecoder, CFDataRef *contentOut);
    // Function pointer for 'CMSDecoderCopySignerStatus'
    typedef OSStatus (*_ReceiptValidation_CMSDecoderCopySignerStatus_)(CMSDecoderRef cmsDecoder, size_t signerIndex, CFTypeRef policyOrArray, Boolean evaluateSecTrust, CMSSignerStatus *signerStatusOut, SecTrustRef *secTrustOut, OSStatus *certVerifyResultCodeOut);
    // Function pointer for 'CMSDecoderCreate'
    typedef OSStatus (*_ReceiptValidation_CMSDecoderCreate_)(CMSDecoderRef *cmsDecoderOut);
    // Function pointer for 'CMSDecoderFinalizeMessage'
    typedef OSStatus (*_ReceiptValidation_CMSDecoderFinalizeMessage_)(CMSDecoderRef cmsDecoder);
    // Function pointer for 'CMSDecoderGetNumSigners'
    typedef OSStatus (*_ReceiptValidation_CMSDecoderGetNumSigners_)(CMSDecoderRef cmsDecoder, size_t *numSignersOut);
    // Function pointer for 'CMSDecoderUpdateMessage'
    typedef OSStatus (*_ReceiptValidation_CMSDecoderUpdateMessage_)(CMSDecoderRef cmsDecoder, const void *msgBytes, size_t msgBytesLen);
    // Function pointer for 'dlopen'
    typedef void *(*_ReceiptValidation_dlopen_)(const char * __path, int __mode);
    // Function pointer for 'dlsym'
    typedef void *(*_ReceiptValidation_dlsym_)(void * __handle, const char * __symbol);
    // Function pointer for 'exit'
    typedef void (*_ReceiptValidation_exit_)(int status);
    // Function pointer for 'IOBSDNameMatching'
    typedef CFMutableDictionaryRef (*_ReceiptValidation_IOBSDNameMatching_)(mach_port_t masterPort, uint32_t options, const char * bsdName);
    // Function pointer for 'IOIteratorNext'
    typedef io_object_t (*_ReceiptValidation_IOIteratorNext_)(io_iterator_t iterator);
    // Function pointer for 'IOMasterPort'
    typedef kern_return_t (*_ReceiptValidation_IOMasterPort_)(mach_port_t bootstrapPort, mach_port_t *masterPort);
    // Function pointer for 'IOObjectRelease'
    typedef kern_return_t (*_ReceiptValidation_IOObjectRelease_)(io_object_t object);
    // Function pointer for 'IORegistryEntryCreateCFProperty'
    typedef CFTypeRef (*_ReceiptValidation_IORegistryEntryCreateCFProperty_)(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options);
    // Function pointer for 'IORegistryEntryGetParentEntry'
    typedef kern_return_t (*_ReceiptValidation_IORegistryEntryGetParentEntry_)(io_registry_entry_t entry, const io_name_t plane, io_registry_entry_t * parent);
    // Function pointer for 'IOServiceGetMatchingServices'
    typedef kern_return_t (*_ReceiptValidation_IOServiceGetMatchingServices_)(mach_port_t masterPort, CFDictionaryRef matching, io_iterator_t *existing);
    // Function pointer for 'NSApplicationMain'
    typedef int (*_ReceiptValidation_NSApplicationMain_)(int argc, const char *argv[]);
    // Function pointer for 'SecAsn1CoderCreate'
    typedef OSStatus (*_ReceiptValidation_SecAsn1CoderCreate_)(SecAsn1CoderRef *coder);
    // Function pointer for 'SecAsn1CoderRelease'
    typedef OSStatus (*_ReceiptValidation_SecAsn1CoderRelease_)(SecAsn1CoderRef coder);
    // Function pointer for 'SecAsn1Decode'
    typedef OSStatus (*_ReceiptValidation_SecAsn1Decode_)(SecAsn1CoderRef coder, const void *src, size_t len, const SecAsn1Template *templates, void *dest);
    // Function pointer for 'SecPolicyCreateBasicX509'
    typedef SecPolicyRef (*_ReceiptValidation_SecPolicyCreateBasicX509_)(void);
    // Function pointer for 'SecRequirementCreateWithString'
    typedef OSStatus (*_ReceiptValidation_SecRequirementCreateWithString_)(CFStringRef text, SecCSFlags flags, SecRequirementRef *requirement);
    // Function pointer for 'SecRequirementCreateWithStringAndErrors'
    typedef OSStatus (*_ReceiptValidation_SecRequirementCreateWithStringAndErrors_)(CFStringRef text, SecCSFlags flags, CFErrorRef *errors, SecRequirementRef *requirement);
    // Function pointer for 'SecStaticCodeCheckValidity'
    typedef OSStatus (*_ReceiptValidation_SecStaticCodeCheckValidity_)(SecStaticCodeRef staticCode, SecCSFlags flags, SecRequirementRef requirement);
    // Function pointer for 'SecStaticCodeCheckValidityWithErrors'
    typedef OSStatus (*_ReceiptValidation_SecStaticCodeCheckValidityWithErrors_)(SecStaticCodeRef staticCode, SecCSFlags flags, SecRequirementRef requirement, CFErrorRef *errors);
    // Function pointer for 'SecStaticCodeCreateWithPath'
    typedef OSStatus (*_ReceiptValidation_SecStaticCodeCreateWithPath_)(CFURLRef path, SecCSFlags flags, SecStaticCodeRef *staticCode);
    
    
    // Function wrapper for 'CC_SHA1'
#define ReceiptValidation_CC_SHA1_ ((_ReceiptValidation_CC_SHA1_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction1, 40, 180, 32, ReceiptValidation_ObfuscationFunction2, 153, -30, 16))
    // Function wrapper for 'CC_SHA1_Final'
#define ReceiptValidation_CC_SHA1_Final_ ((_ReceiptValidation_CC_SHA1_Final_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction3, 140, 71, 32, ReceiptValidation_ObfuscationFunction3, 49, -77, 16))
    // Function wrapper for 'CC_SHA1_Init'
#define ReceiptValidation_CC_SHA1_Init_ ((_ReceiptValidation_CC_SHA1_Init_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction1, 40, 180, 32, ReceiptValidation_ObfuscationFunction2, 94, 25, 16))
    // Function wrapper for 'CC_SHA1_Update'
#define ReceiptValidation_CC_SHA1_Update_ ((_ReceiptValidation_CC_SHA1_Update_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction3, 41, 16, 32, ReceiptValidation_ObfuscationFunction3, 67, 101, 16))
    // Function wrapper for 'CFArrayAppendValue'
#define ReceiptValidation_CFArrayAppendValue_ ((_ReceiptValidation_CFArrayAppendValue_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 132, 210, 80, ReceiptValidation_ObfuscationFunction3, 66, -64, 32))
    // Function wrapper for 'CFArrayCreateMutable'
#define ReceiptValidation_CFArrayCreateMutable_ ((_ReceiptValidation_CFArrayCreateMutable_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 63, 27, 80, ReceiptValidation_ObfuscationFunction4, 17, 232, 32))
    // Function wrapper for 'CFBundleCopyBundleURL'
#define ReceiptValidation_CFBundleCopyBundleURL_ ((_ReceiptValidation_CFBundleCopyBundleURL_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction2, 15, -77, 80, ReceiptValidation_ObfuscationFunction2, 68, 101, 32))
    // Function wrapper for 'CFBundleGetIdentifier'
#define ReceiptValidation_CFBundleGetIdentifier_ ((_ReceiptValidation_CFBundleGetIdentifier_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 132, 210, 80, ReceiptValidation_ObfuscationFunction1, 85, 140, 32))
    // Function wrapper for 'CFBundleGetMainBundle'
#define ReceiptValidation_CFBundleGetMainBundle_ ((_ReceiptValidation_CFBundleGetMainBundle_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction2, 15, -77, 80, ReceiptValidation_ObfuscationFunction1, 105, 202, 32))
    // Function wrapper for 'CFBundleGetValueForInfoDictionaryKey'
#define ReceiptValidation_CFBundleGetValueForInfoDictionaryKey_ ((_ReceiptValidation_CFBundleGetValueForInfoDictionaryKey_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction2, 117, -123, 80, ReceiptValidation_ObfuscationFunction3, 6, 58, 48))
    // Function wrapper for 'CFDataAppendBytes'
#define ReceiptValidation_CFDataAppendBytes_ ((_ReceiptValidation_CFDataAppendBytes_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 132, 210, 80, ReceiptValidation_ObfuscationFunction1, 79, 104, 32))
    // Function wrapper for 'CFDataCreate'
#define ReceiptValidation_CFDataCreate_ ((_ReceiptValidation_CFDataCreate_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 63, 27, 80, ReceiptValidation_ObfuscationFunction1, 139, 82, 16))
    // Function wrapper for 'CFDataCreateMutable'
#define ReceiptValidation_CFDataCreateMutable_ ((_ReceiptValidation_CFDataCreateMutable_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 63, 27, 80, ReceiptValidation_ObfuscationFunction1, 33, 171, 32))
    // Function wrapper for 'CFDataGetBytePtr'
#define ReceiptValidation_CFDataGetBytePtr_ ((_ReceiptValidation_CFDataGetBytePtr_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 63, 27, 80, ReceiptValidation_ObfuscationFunction1, 123, 65, 32))
    // Function wrapper for 'CFDataGetLength'
#define ReceiptValidation_CFDataGetLength_ ((_ReceiptValidation_CFDataGetLength_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 63, 27, 80, ReceiptValidation_ObfuscationFunction3, 60, -75, 16))
    // Function wrapper for 'CFDateFormatterCreate'
#define ReceiptValidation_CFDateFormatterCreate_ ((_ReceiptValidation_CFDateFormatterCreate_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 132, 210, 80, ReceiptValidation_ObfuscationFunction4, 50, 31, 32))
    // Function wrapper for 'CFDateFormatterCreateDateFromString'
#define ReceiptValidation_CFDateFormatterCreateDateFromString_ ((_ReceiptValidation_CFDateFormatterCreateDateFromString_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 132, 210, 80, ReceiptValidation_ObfuscationFunction3, 126, -81, 48))
    // Function wrapper for 'CFDateFormatterSetFormat'
#define ReceiptValidation_CFDateFormatterSetFormat_ ((_ReceiptValidation_CFDateFormatterSetFormat_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction2, 15, -77, 80, ReceiptValidation_ObfuscationFunction1, 120, 137, 32))
    // Function wrapper for 'CFDictionaryAddValue'
#define ReceiptValidation_CFDictionaryAddValue_ ((_ReceiptValidation_CFDictionaryAddValue_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 132, 210, 80, ReceiptValidation_ObfuscationFunction4, 54, 234, 32))
    // Function wrapper for 'CFDictionaryCreateMutable'
#define ReceiptValidation_CFDictionaryCreateMutable_ ((_ReceiptValidation_CFDictionaryCreateMutable_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction2, 15, -77, 80, ReceiptValidation_ObfuscationFunction4, 92, 178, 32))
    // Function wrapper for 'CFDictionaryGetValue'
#define ReceiptValidation_CFDictionaryGetValue_ ((_ReceiptValidation_CFDictionaryGetValue_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 63, 27, 80, ReceiptValidation_ObfuscationFunction2, 5, 105, 32))
    // Function wrapper for 'CFEqual'
#define ReceiptValidation_CFEqual_ ((_ReceiptValidation_CFEqual_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 132, 210, 80, ReceiptValidation_ObfuscationFunction4, 127, 198, 16))
    // Function wrapper for 'CFNumberCreate'
#define ReceiptValidation_CFNumberCreate_ ((_ReceiptValidation_CFNumberCreate_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction2, 15, -77, 80, ReceiptValidation_ObfuscationFunction1, 128, 89, 16))
    // Function wrapper for 'CFRelease'
#define ReceiptValidation_CFRelease_ ((_ReceiptValidation_CFRelease_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction2, 15, -77, 80, ReceiptValidation_ObfuscationFunction2, 20, 85, 16))
    // Function wrapper for 'CFStringCompare'
#define ReceiptValidation_CFStringCompare_ ((_ReceiptValidation_CFStringCompare_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 63, 27, 80, ReceiptValidation_ObfuscationFunction3, 113, 50, 16))
    // Function wrapper for 'CFStringCreateWithBytes'
#define ReceiptValidation_CFStringCreateWithBytes_ ((_ReceiptValidation_CFStringCreateWithBytes_) ReceiptValidation_pointers[135])
    // Function wrapper for 'CFStringCreateWithCString'
#define ReceiptValidation_CFStringCreateWithCString_ ((_ReceiptValidation_CFStringCreateWithCString_) ReceiptValidation_pointers[97])
    // Function wrapper for 'CFURLCreateCopyAppendingPathComponent'
#define ReceiptValidation_CFURLCreateCopyAppendingPathComponent_ ((_ReceiptValidation_CFURLCreateCopyAppendingPathComponent_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 63, 27, 80, ReceiptValidation_ObfuscationFunction3, 119, -100, 48))
    // Function wrapper for 'CFURLCreateDataAndPropertiesFromResource'
#define ReceiptValidation_CFURLCreateDataAndPropertiesFromResource_ ((_ReceiptValidation_CFURLCreateDataAndPropertiesFromResource_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction2, 117, -123, 80, ReceiptValidation_ObfuscationFunction3, 131, -119, 48))
    // Function wrapper for 'CFURLCreateWithFileSystemPathRelativeToBase'
#define ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase_ ((_ReceiptValidation_CFURLCreateWithFileSystemPathRelativeToBase_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 132, 210, 80, ReceiptValidation_ObfuscationFunction4, 16, 112, 48))
    // Function wrapper for 'CMSDecoderCopyContent'
#define ReceiptValidation_CMSDecoderCopyContent_ ((_ReceiptValidation_CMSDecoderCopyContent_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction1, 88, 208, 64, ReceiptValidation_ObfuscationFunction1, 62, 109, 32))
    // Function wrapper for 'CMSDecoderCopySignerStatus'
#define ReceiptValidation_CMSDecoderCopySignerStatus_ ((_ReceiptValidation_CMSDecoderCopySignerStatus_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction3, 145, -77, 64, ReceiptValidation_ObfuscationFunction3, 55, -95, 32))
    // Function wrapper for 'CMSDecoderCreate'
#define ReceiptValidation_CMSDecoderCreate_ ((_ReceiptValidation_CMSDecoderCreate_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction1, 7, 148, 64, ReceiptValidation_ObfuscationFunction2, 64, 98, 32))
    // Function wrapper for 'CMSDecoderFinalizeMessage'
#define ReceiptValidation_CMSDecoderFinalizeMessage_ ((_ReceiptValidation_CMSDecoderFinalizeMessage_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction3, 145, -77, 64, ReceiptValidation_ObfuscationFunction1, 76, 50, 32))
    // Function wrapper for 'CMSDecoderGetNumSigners'
#define ReceiptValidation_CMSDecoderGetNumSigners_ ((_ReceiptValidation_CMSDecoderGetNumSigners_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 26, 47, 64, ReceiptValidation_ObfuscationFunction2, 141, -2, 32))
    // Function wrapper for 'CMSDecoderUpdateMessage'
#define ReceiptValidation_CMSDecoderUpdateMessage_ ((_ReceiptValidation_CMSDecoderUpdateMessage_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 26, 47, 64, ReceiptValidation_ObfuscationFunction2, 91, 42, 32))
    // Function wrapper for 'dlopen'
#define ReceiptValidation_dlopen_ ((_ReceiptValidation_dlopen_) ReceiptValidation_pointers[0])
    // Function wrapper for 'dlsym'
#define ReceiptValidation_dlsym_ ((_ReceiptValidation_dlsym_) ReceiptValidation_pointers[81])
    // Function wrapper for 'exit'
#define ReceiptValidation_exit_ ((_ReceiptValidation_exit_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction1, 40, 180, 32, ReceiptValidation_ObfuscationFunction4, 10, 126, 16))
    // Function wrapper for 'IOBSDNameMatching'
#define ReceiptValidation_IOBSDNameMatching_ ((_ReceiptValidation_IOBSDNameMatching_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction3, 108, 71, 64, ReceiptValidation_ObfuscationFunction4, 114, 211, 32))
    // Function wrapper for 'IOIteratorNext'
#define ReceiptValidation_IOIteratorNext_ ((_ReceiptValidation_IOIteratorNext_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction3, 69, 25, 64, ReceiptValidation_ObfuscationFunction1, 147, 146, 16))
    // Function wrapper for 'IOMasterPort'
#define ReceiptValidation_IOMasterPort_ ((_ReceiptValidation_IOMasterPort_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction3, 108, 71, 64, ReceiptValidation_ObfuscationFunction3, 152, -4, 16))
    // Function wrapper for 'IOObjectRelease'
#define ReceiptValidation_IOObjectRelease_ ((_ReceiptValidation_IOObjectRelease_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction2, 14, -17, 64, ReceiptValidation_ObfuscationFunction3, 96, -96, 16))
    // Function wrapper for 'IORegistryEntryCreateCFProperty'
#define ReceiptValidation_IORegistryEntryCreateCFProperty_ ((_ReceiptValidation_IORegistryEntryCreateCFProperty_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction2, 14, -17, 64, ReceiptValidation_ObfuscationFunction4, 36, 24, 32))
    // Function wrapper for 'IORegistryEntryGetParentEntry'
#define ReceiptValidation_IORegistryEntryGetParentEntry_ ((_ReceiptValidation_IORegistryEntryGetParentEntry_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction2, 14, -17, 64, ReceiptValidation_ObfuscationFunction2, 155, -13, 32))
    // Function wrapper for 'IOServiceGetMatchingServices'
#define ReceiptValidation_IOServiceGetMatchingServices_ ((_ReceiptValidation_IOServiceGetMatchingServices_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction3, 108, 71, 64, ReceiptValidation_ObfuscationFunction4, 3, 225, 32))
    // Function wrapper for 'NSApplicationMain'
#define ReceiptValidation_NSApplicationMain_ ((_ReceiptValidation_NSApplicationMain_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction2, 124, -14, 64, ReceiptValidation_ObfuscationFunction4, 57, 207, 32))
    // Function wrapper for 'SecAsn1CoderCreate'
#define ReceiptValidation_SecAsn1CoderCreate_ ((_ReceiptValidation_SecAsn1CoderCreate_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 26, 47, 64, ReceiptValidation_ObfuscationFunction4, 101, 68, 32))
    // Function wrapper for 'SecAsn1CoderRelease'
#define ReceiptValidation_SecAsn1CoderRelease_ ((_ReceiptValidation_SecAsn1CoderRelease_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction1, 7, 148, 64, ReceiptValidation_ObfuscationFunction4, 156, 73, 32))
    // Function wrapper for 'SecAsn1Decode'
#define ReceiptValidation_SecAsn1Decode_ ((_ReceiptValidation_SecAsn1Decode_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction1, 7, 148, 64, ReceiptValidation_ObfuscationFunction1, 103, 83, 16))
    // Function wrapper for 'SecPolicyCreateBasicX509'
#define ReceiptValidation_SecPolicyCreateBasicX509_ ((_ReceiptValidation_SecPolicyCreateBasicX509_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 26, 47, 64, ReceiptValidation_ObfuscationFunction3, 150, 50, 32))
    // Function wrapper for 'SecRequirementCreateWithString'
#define ReceiptValidation_SecRequirementCreateWithString_ ((_ReceiptValidation_SecRequirementCreateWithString_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction3, 145, -77, 64, ReceiptValidation_ObfuscationFunction2, 73, -14, 32))
    // Function wrapper for 'SecRequirementCreateWithStringAndErrors'
#define ReceiptValidation_SecRequirementCreateWithStringAndErrors_ ((_ReceiptValidation_SecRequirementCreateWithStringAndErrors_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 26, 47, 64, ReceiptValidation_ObfuscationFunction3, 30, 119, 48))
    // Function wrapper for 'SecStaticCodeCheckValidity'
#define ReceiptValidation_SecStaticCodeCheckValidity_ ((_ReceiptValidation_SecStaticCodeCheckValidity_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction1, 88, 208, 64, ReceiptValidation_ObfuscationFunction4, 95, 96, 32))
    // Function wrapper for 'SecStaticCodeCheckValidityWithErrors'
#define ReceiptValidation_SecStaticCodeCheckValidityWithErrors_ ((_ReceiptValidation_SecStaticCodeCheckValidityWithErrors_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 26, 47, 64, ReceiptValidation_ObfuscationFunction2, 86, 57, 48))
    // Function wrapper for 'SecStaticCodeCreateWithPath'
#define ReceiptValidation_SecStaticCodeCreateWithPath_ ((_ReceiptValidation_SecStaticCodeCreateWithPath_) ReceiptValidation_LookupFunction1(ReceiptValidation_ObfuscationFunction4, 26, 47, 64, ReceiptValidation_ObfuscationFunction4, 34, 204, 32))
    
    
    //
    // CodeBlock ObfuscationFunction
    //
    inline static void ReceiptValidation_ObfuscationFunction2(const char *_p1, char *_p2, char _p3, int _p4) {
        int _i1 = 0;
        while(_i1 < _p4) { _p2[_i1] = _p1[_i1] + _p3; _i1++; }
    }
    
    inline static CFStringRef ReceiptValidation_ObfuscationFunction2CF(const char *_p1, char _p3, int _p4) {
        char _tmp1[0x50];
        char *_tmp2 = _tmp1;
        ReceiptValidation_ObfuscationFunction2(_p1, _tmp1, _p3, _p4);
        while(*_tmp2) { _tmp2++; }
        CFStringRef _str1 = ((_ReceiptValidation_CFStringCreateWithBytes_) ReceiptValidation_CFStringCreateWithBytes_)(kCFAllocatorDefault, (const UInt8 *) _tmp1, (CFIndex) (_tmp2 - _tmp1), kCFStringEncodingUTF8, false);
        return _str1;
    }
    
    //
    // CodeBlock ObfuscationFunction
    //
    inline static void ReceiptValidation_ObfuscationFunction3(const char *_p1, char *_p2, char _p3, int _p4) {
        int _i1 = 0;
        while(_i1 < _p4) { _p2[_i1] = _p1[_i1] + _p3; _i1++; }
    }
    
    inline static CFStringRef ReceiptValidation_ObfuscationFunction3CF(const char *_p1, char _p3, int _p4) {
        char _tmp1[0x50];
        ReceiptValidation_ObfuscationFunction3(_p1, _tmp1, _p3, _p4);
        CFStringRef _str1 = ((_ReceiptValidation_CFStringCreateWithCString_) ReceiptValidation_CFStringCreateWithCString_)(kCFAllocatorDefault, _tmp1, kCFStringEncodingUTF8);
        return _str1;
    }
    
    //
    // CodeBlock ObfuscationFunction
    //
    inline static void ReceiptValidation_ObfuscationFunction4(const char *_p1, char *_p2, char _p3, int _p4) {
        int _i1 = 0;
        while(_i1 < _p4) { _p2[_i1] = _p1[_i1] ^ _p3; _i1++; }
    }
    
    inline static CFStringRef ReceiptValidation_ObfuscationFunction4CF(const char *_p1, char _p3, int _p4) {
        char _tmp1[0x50];
        char *_tmp2 = _tmp1;
        ReceiptValidation_ObfuscationFunction4(_p1, _tmp1, _p3, _p4);
        while(*_tmp2) { _tmp2++; }
        CFStringRef _str1 = ((_ReceiptValidation_CFStringCreateWithBytes_) ReceiptValidation_CFStringCreateWithBytes_)(kCFAllocatorDefault, (const UInt8 *) _tmp1, (CFIndex) (_tmp2 - _tmp1), kCFStringEncodingUTF8, false);
        return _str1;
    }
    
    //
    // CodeBlock ObfuscationFunction
    //
    inline static void ReceiptValidation_ObfuscationFunction1(const char *_p1, char *_p2, char _p3, int _p4) {
        int _i1 = 0;
        while(_i1 < _p4) { _p2[_i1] = _p1[_i1] ^ _p3; _i1++; }
    }
    
    inline static CFStringRef ReceiptValidation_ObfuscationFunction1CF(const char *_p1, char _p3, int _p4) {
        char _tmp1[0x50];
        ReceiptValidation_ObfuscationFunction1(_p1, _tmp1, _p3, _p4);
        CFStringRef _str1 = ((_ReceiptValidation_CFStringCreateWithCString_) ReceiptValidation_CFStringCreateWithCString_)(kCFAllocatorDefault, _tmp1, kCFStringEncodingUTF8);
        return _str1;
    }
    
    //
    // CodeBlock LookupFunction
    //
    inline static void *ReceiptValidation_LookupFunction1(ReceiptValidation_decrypt _func1, int _index1, char _seed1, int _len1, ReceiptValidation_decrypt _func2, int _index2, char _seed2, int _len2) {
        char tmp[0x50];
        // Load the library if needed
        if (ReceiptValidation_pointers[_index1] == NULL) {
            _func1(ReceiptValidation_strings[_index1], tmp, _seed1, _len1);
            ReceiptValidation_pointers[_index1] = ((_ReceiptValidation_dlopen_) ReceiptValidation_dlopen_)(tmp, RTLD_LAZY);
        }
        // Locate the function if needed
        if (ReceiptValidation_pointers[_index2] == NULL) {
            _func2(ReceiptValidation_strings[_index2], tmp, _seed2, _len2);
            ReceiptValidation_pointers[_index2] = ((_ReceiptValidation_dlsym_) ReceiptValidation_dlsym_)(ReceiptValidation_pointers[_index1], tmp);
        }
        return ReceiptValidation_pointers[_index2];
    }
    
    //
    // CodeBlock GetMainBundle
    //
#if DEBUG
    inline static void ReceiptValidation_GetMainBundle1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        // Retrieve the main bundle
        ReceiptValidation_ctx->ReceiptValidation_mainBundle = ReceiptValidation_CFBundleGetMainBundle_();
        if (!ReceiptValidation_ctx->ReceiptValidation_mainBundle) {
            ReceiptValidation_CFRelease_(ReceiptValidation_ctx->ReceiptValidation_mainBundle);
        }
    }
#else
#define ReceiptValidation_GetMainBundle1(ReceiptValidation_ctx) { \
ReceiptValidation_ctx->ReceiptValidation_mainBundle = ReceiptValidation_CFBundleGetMainBundle_(); \
if (!ReceiptValidation_ctx->ReceiptValidation_mainBundle) { \
ReceiptValidation_CFRelease_(ReceiptValidation_ctx->ReceiptValidation_mainBundle); \
} \
}
#endif
    
    //
    // CodeBlock LoadReceipt
    //
#if DEBUG
    inline static void ReceiptValidation_LoadReceipt1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        CFStringRef _str1;
        CFURLRef _url1, _url2;
        SInt32 _errorCode;
        volatile int _code = 92; _code -= 35; _code *= 3; _code += 2;
        // Compute the path to the receipt
        _url1 = ReceiptValidation_CFBundleCopyBundleURL_((CFBundleRef) ReceiptValidation_ctx->ReceiptValidation_mainBundle);
        _str1 = ReceiptValidation_ObfuscationFunction3CF((ReceiptValidation_strings[146]), 85, 32);
        _url2 = ReceiptValidation_CFURLCreateCopyAppendingPathComponent_(kCFAllocatorDefault, _url1, _str1, false);
        ReceiptValidation_CFRelease_(_str1);
        ReceiptValidation_CFRelease_(_url1);
        // Load the receipt data
        if (ReceiptValidation_ctx->ReceiptValidation_receiptData) ReceiptValidation_CFRelease_(ReceiptValidation_ctx->ReceiptValidation_receiptData);
        ReceiptValidation_CFURLCreateDataAndPropertiesFromResource_(kCFAllocatorDefault, _url2, (CFDataRef *) &(ReceiptValidation_ctx->ReceiptValidation_receiptData), NULL, NULL, &_errorCode);
        if (_errorCode) {
            ReceiptValidation_exit_(_code);
            ReceiptValidation_CFRelease_(_url1);
        }
        ReceiptValidation_CFRelease_(_url2);
    }
#else
#define ReceiptValidation_LoadReceipt1(ReceiptValidation_ctx) { \
CFStringRef _str1; \
CFURLRef _url1, _url2; \
SInt32 _errorCode; \
volatile int _code = 118; _code -= 61; _code *= 3; _code += 2; \
_url1 = ReceiptValidation_CFBundleCopyBundleURL_((CFBundleRef) ReceiptValidation_ctx->ReceiptValidation_mainBundle); \
_str1 = ReceiptValidation_ObfuscationFunction3CF((ReceiptValidation_strings[146]), 85, 32); \
_url2 = ReceiptValidation_CFURLCreateCopyAppendingPathComponent_(kCFAllocatorDefault, _url1, _str1, false); \
ReceiptValidation_CFRelease_(_str1); \
ReceiptValidation_CFRelease_(_url1); \
if (ReceiptValidation_ctx->ReceiptValidation_receiptData) ReceiptValidation_CFRelease_(ReceiptValidation_ctx->ReceiptValidation_receiptData); \
ReceiptValidation_CFURLCreateDataAndPropertiesFromResource_(kCFAllocatorDefault, _url2, (CFDataRef *) &(ReceiptValidation_ctx->ReceiptValidation_receiptData), NULL, NULL, &_errorCode); \
if (_errorCode) { \
ReceiptValidation_exit_(_code); \
ReceiptValidation_CFRelease_(_url1); \
} \
ReceiptValidation_CFRelease_(_url2); \
}
#endif
    
    //
    // CodeBlock GetMacAddress
    //
#if DEBUG
    inline static void ReceiptValidation_GetMacAddress1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        kern_return_t _kernResult;
        mach_port_t _master_port;
        CFMutableDictionaryRef _matchingDict;
        io_iterator_t _iterator;
        io_object_t _service, _parentService;
        volatile int _code = 120; _code -= 63; _code *= 3; _code += 2;
        char *_str1;
        CFStringRef _str2;
        _str2 = ReceiptValidation_ObfuscationFunction2CF((ReceiptValidation_strings[9]), 24, 16); 
        // Open a MACH port
        _kernResult = ReceiptValidation_IOMasterPort_(MACH_PORT_NULL, &_master_port);
        if (_kernResult != KERN_SUCCESS) {
            goto ReceiptValidation_GetMacAddress1__bail;
            ReceiptValidation_CFRelease_(_str2);
        }
        // Create a search for primary interface
        char _str1_[0x50];
        ReceiptValidation_ObfuscationFunction1((ReceiptValidation_strings[143]), _str1_, 192, 16);
        _str1 = _str1_;
        _matchingDict = ReceiptValidation_IOBSDNameMatching_(_master_port, 0, _str1);
        if (!_matchingDict) {
            goto ReceiptValidation_GetMacAddress1__bail;
            ReceiptValidation_CFRelease_(_str1);
        }
        // Perform the search
        _kernResult = ReceiptValidation_IOServiceGetMatchingServices_(_master_port, _matchingDict, &_iterator);
        if (_kernResult != KERN_SUCCESS) {
            ReceiptValidation_exit_(_code);
            goto ReceiptValidation_GetMacAddress1__bail;
            ReceiptValidation_CFRelease_(_str1);
        }
        // Iterate over the result
        while((_service = ReceiptValidation_IOIteratorNext_(_iterator)) != 0) {
            _kernResult = ReceiptValidation_IORegistryEntryGetParentEntry_(_service, kIOServicePlane, &_parentService);
            if (_kernResult == KERN_SUCCESS) {
                if (ReceiptValidation_ctx->ReceiptValidation_macData) ReceiptValidation_CFRelease_(ReceiptValidation_ctx->ReceiptValidation_macData);
                ReceiptValidation_ctx->ReceiptValidation_macData = (CFDataRef) ReceiptValidation_IORegistryEntryCreateCFProperty_(_parentService, _str2, kCFAllocatorDefault, 0);
                ReceiptValidation_IOObjectRelease_(_parentService);
            }
            ReceiptValidation_IOObjectRelease_(_iterator);
            ReceiptValidation_IOObjectRelease_(_service);
        }
    ReceiptValidation_GetMacAddress1__bail:
        ReceiptValidation_CFRelease_(_str2);
    }
#else
#define ReceiptValidation_GetMacAddress1(ReceiptValidation_ctx) { \
kern_return_t _kernResult; \
mach_port_t _master_port; \
CFMutableDictionaryRef _matchingDict; \
io_iterator_t _iterator; \
io_object_t _service, _parentService; \
volatile int _code = 63; _code -= 20; _code *= 4; _code += 1; \
char *_str1; \
CFStringRef _str2; \
_str2 = ReceiptValidation_ObfuscationFunction2CF((ReceiptValidation_strings[9]), 24, 16);  \
_kernResult = ReceiptValidation_IOMasterPort_(MACH_PORT_NULL, &_master_port); \
if (_kernResult != KERN_SUCCESS) { \
goto ReceiptValidation_GetMacAddress1__bail; \
ReceiptValidation_CFRelease_(_str2); \
} \
char _str1_[0x50]; \
ReceiptValidation_ObfuscationFunction1((ReceiptValidation_strings[143]), _str1_, 192, 16); \
_str1 = _str1_; \
_matchingDict = ReceiptValidation_IOBSDNameMatching_(_master_port, 0, _str1); \
if (!_matchingDict) { \
goto ReceiptValidation_GetMacAddress1__bail; \
ReceiptValidation_CFRelease_(_str1); \
} \
_kernResult = ReceiptValidation_IOServiceGetMatchingServices_(_master_port, _matchingDict, &_iterator); \
if (_kernResult != KERN_SUCCESS) { \
ReceiptValidation_exit_(_code); \
goto ReceiptValidation_GetMacAddress1__bail; \
ReceiptValidation_CFRelease_(_str1); \
} \
while((_service = ReceiptValidation_IOIteratorNext_(_iterator)) != 0) { \
_kernResult = ReceiptValidation_IORegistryEntryGetParentEntry_(_service, kIOServicePlane, &_parentService); \
if (_kernResult == KERN_SUCCESS) { \
if (ReceiptValidation_ctx->ReceiptValidation_macData) ReceiptValidation_CFRelease_(ReceiptValidation_ctx->ReceiptValidation_macData); \
ReceiptValidation_ctx->ReceiptValidation_macData = (CFDataRef) ReceiptValidation_IORegistryEntryCreateCFProperty_(_parentService, _str2, kCFAllocatorDefault, 0); \
ReceiptValidation_IOObjectRelease_(_parentService); \
} \
ReceiptValidation_IOObjectRelease_(_iterator); \
ReceiptValidation_IOObjectRelease_(_service); \
} \
ReceiptValidation_GetMacAddress1__bail: \
ReceiptValidation_CFRelease_(_str2); \
}
#endif
    
    //
    // CodeBlock GetReceiptInformation
    //
#if DEBUG
    //
    // Extract an ASN.1 INTEGER value
    //
    inline static void ReceiptValidation_GetReceiptInformation1X(const ReceiptValidation_ASN1_DATA *_asn1data, int *_payload) {
        uint8 *_ptr = _asn1data->data;
        size_t _size = _asn1data->length;
        *_payload = 0;
        do {
            *_payload <<= 8;
            *_payload += (uint8) *_ptr++;
        } while(--_size > 0);
    }
#else
    inline static void ReceiptValidation_GetReceiptInformation1X(const ReceiptValidation_ASN1_DATA *_asn1data, int *_payload) { \
        uint8 *_ptr = _asn1data->data; \
        size_t _size = _asn1data->length; \
        *_payload = 0; \
        do { \
            *_payload <<= 8; \
            *_payload += (uint8) *_ptr++; \
        } while(--_size > 0); \
    }
#endif
    
#if DEBUG
    inline static void ReceiptValidation_GetReceiptInformation1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        ReceiptValidation_Parsing _receiptContext, _inappContext, *_currentContext;
        CMSDecoderRef _decoder = NULL;
        CFDataRef _content = NULL;
        CFNumberRef _key = NULL;
        SecAsn1CoderRef _asn1decoder = NULL;
        OSStatus _status;
        ReceiptValidation_Payload _payload = { 0 };
        ReceiptValidation_ReceiptAttribute *_current;
        CFDateFormatterRef _formatter;
        ReceiptValidation_ReceiptAttributeType _key1, _key2;
        CFTypeRef _value1, _value2;
        ReceiptValidation_ASN1_DATA _asn1data;
        int _type, _integer;
        // Create a decoder for the encrypted message
        _status = ReceiptValidation_CMSDecoderCreate_(&_decoder);
        if (_status) {
            goto ReceiptValidation_GetReceiptInformation1__bail;
        }
        // Decrypt the message (update pass)
        _status = ReceiptValidation_CMSDecoderUpdateMessage_(_decoder, ReceiptValidation_CFDataGetBytePtr_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_receiptData), ReceiptValidation_CFDataGetLength_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_receiptData));
        if (_status) {
            goto ReceiptValidation_GetReceiptInformation1__bail;
        }
        // Decrypt the message (final pass)
        _status = ReceiptValidation_CMSDecoderFinalizeMessage_(_decoder);
        if (_status) {
            goto ReceiptValidation_GetReceiptInformation1__bail;
        }
        // Get the message content
        _status = ReceiptValidation_CMSDecoderCopyContent_(_decoder, &_content);
        if (_status) {
            goto ReceiptValidation_GetReceiptInformation1__bail;
        }
        // Create the ASN.1 parser
        _status = ReceiptValidation_SecAsn1CoderCreate_(&_asn1decoder);
        if (_status) {
            goto ReceiptValidation_GetReceiptInformation1__bail;
        }
        // Create a formatter to parse ISO-3339 dates
        _formatter = ReceiptValidation_CFDateFormatterCreate_(kCFAllocatorDefault, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
        _value1 = ReceiptValidation_ObfuscationFunction4CF((ReceiptValidation_strings[18]), 238, 48); 
        ReceiptValidation_CFDateFormatterSetFormat_(_formatter, (CFStringRef) _value1);
        ReceiptValidation_CFRelease_(_value1);
        // Create the receipt parsing context                
        _receiptContext.ReceiptValidation_source = ReceiptValidation_CFDataGetBytePtr_(_content);
        _receiptContext.ReceiptValidation_length = ReceiptValidation_CFDataGetLength_(_content);
        _receiptContext.ReceiptValidation_dictionary = NULL;
        _receiptContext.ReceiptValidation_parent = NULL;
        _currentContext = &_receiptContext;
        while(true) {
            if (!_currentContext->ReceiptValidation_dictionary) {
                // Create the target dictionary
                _currentContext->ReceiptValidation_dictionary = ReceiptValidation_CFDictionaryCreateMutable_(kCFAllocatorDefault, (CFIndex) 0x50, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
                // Decode the receipt payload from ASN.1
                _status = ReceiptValidation_SecAsn1Decode_(_asn1decoder, _currentContext->ReceiptValidation_source, _currentContext->ReceiptValidation_length, ReceiptValidation_kSetOfReceiptAttributeTemplate, &_payload);
                if (_status) {
                    goto ReceiptValidation_GetReceiptInformation1__bail;
                }
                _currentContext->ReceiptValidation_pointer = _payload.attributes;
            }
            // Iterate over attributes
            while(*_currentContext->ReceiptValidation_pointer) {
                _current = *_currentContext->ReceiptValidation_pointer++;
                ReceiptValidation_GetReceiptInformation1X((&_current->type), (&_type));
                _key1 = _key2 = ReceiptValidation_DataStoreNone;
                _value1 = _value2 = NULL;
                // Extract the value
                switch(_type) {
                        // Attributes encoded as ASN.1 UTF8STRING
                    case ReceiptValidation_ReceiptAttributeTypeBundleId:
                    case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                    case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                    case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                    case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                        _status = ReceiptValidation_SecAsn1Decode_(_asn1decoder, _current->value.data, _current->value.length, kSecAsn1UTF8StringTemplate, &_asn1data);
                        if (_status) {
                            goto ReceiptValidation_GetReceiptInformation1__bail;
                        }
                        _value1 = ((_ReceiptValidation_CFStringCreateWithBytes_) ReceiptValidation_CFStringCreateWithBytes_)(kCFAllocatorDefault, (const UInt8 *) _asn1data.data, (CFIndex) _asn1data.length, kCFStringEncodingUTF8, false);
                        _value2 = ReceiptValidation_CFDataCreate_(kCFAllocatorDefault, (const UInt8 *) _current->value.data, (CFIndex) _current->value.length);
                        break;
                        // Attributes encoded as ASN.1 IA5STRING
                    case ReceiptValidation_InAppAttributeTypePurchaseDate:
                    case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                        _status = ReceiptValidation_SecAsn1Decode_(_asn1decoder, _current->value.data, _current->value.length, kSecAsn1IA5StringTemplate, &_asn1data);
                        if (_status) {
                            goto ReceiptValidation_GetReceiptInformation1__bail;
                        }
                        _value1 = ((_ReceiptValidation_CFStringCreateWithBytes_) ReceiptValidation_CFStringCreateWithBytes_)(kCFAllocatorDefault, (const UInt8 *) _asn1data.data, (CFIndex) _asn1data.length, kCFStringEncodingASCII, false);
                        _value2 = ReceiptValidation_CFDateFormatterCreateDateFromString_(kCFAllocatorDefault, _formatter, (CFStringRef) _value1, NULL);
                        break;
                        // Attributes encoded as ASN.1 INTEGER
                    case ReceiptValidation_InAppAttributeTypeQuantity:
                        _status = ReceiptValidation_SecAsn1Decode_(_asn1decoder, _current->value.data, _current->value.length, kSecAsn1IntegerTemplate, &_asn1data);
                        if (_status) {
                            goto ReceiptValidation_GetReceiptInformation1__bail;
                        }
                        ReceiptValidation_GetReceiptInformation1X((&_asn1data), (&_integer));
                        _value1 = ReceiptValidation_CFNumberCreate_(kCFAllocatorDefault, kCFNumberIntType, &_integer);
                        break;
                        // Attributes encoded as ASN.1 OCTETSTRING
                    case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                    case ReceiptValidation_ReceiptAttributeTypeHash:
                        _value1 = ReceiptValidation_CFDataCreate_(kCFAllocatorDefault, (const UInt8 *) _current->value.data, (CFIndex) _current->value.length);
                        break;
                    default:
                        break;
                }
                // Assign the key for storage
                switch(_type) {
                    case ReceiptValidation_ReceiptAttributeTypeBundleId:
                        _key1 = ReceiptValidation_DataStoreBundleId;
                        _key2 = ReceiptValidation_DataStoreBundleIdData;
                        break;
                    case ReceiptValidation_ReceiptAttributeTypeBundleVersion:
                        _key1 = ReceiptValidation_DataStoreBundleVersion;
                        _key2 = ReceiptValidation_DataStoreBundleVersionData;
                        break;
                    case ReceiptValidation_InAppAttributeTypeProductIdentifer:
                        _key1 = ReceiptValidation_InAppAttributeTypeProductIdentifer;
                        break;
                    case ReceiptValidation_InAppAttributeTypeTransactionIdentifer:
                        _key1 = ReceiptValidation_InAppAttributeTypeTransactionIdentifer;
                        break;
                    case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer:
                        _key1 = ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer;
                        break;
                    case ReceiptValidation_InAppAttributeTypePurchaseDate:
                        _key2 = ReceiptValidation_InAppAttributeTypePurchaseDate;
                        break;
                    case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate:
                        _key2 = ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate;
                        break;
                    case ReceiptValidation_InAppAttributeTypeQuantity:
                        _key1 = ReceiptValidation_InAppAttributeTypeQuantity;
                        break;
                    case ReceiptValidation_ReceiptAttributeTypeOpaqueValue:
                        _key1 = ReceiptValidation_DataStoreOpaqueValue;
                        break;
                    case ReceiptValidation_ReceiptAttributeTypeHash:
                        _key1 = ReceiptValidation_DataStoreHash;
                        break;
                    default:
                        break;
                }
                // Store data if any
                if (_key1 != ReceiptValidation_DataStoreNone) {
                    _key = ReceiptValidation_CFNumberCreate_(kCFAllocatorDefault, kCFNumberIntType, &_key1);
                    ReceiptValidation_CFDictionaryAddValue_((CFMutableDictionaryRef) _currentContext->ReceiptValidation_dictionary, _key, _value1);
                    ReceiptValidation_CFRelease_(_key);
                }
                // Store data if any
                if (_key2 != ReceiptValidation_DataStoreNone) {
                    _key = ReceiptValidation_CFNumberCreate_(kCFAllocatorDefault, kCFNumberIntType, &_key2);
                    ReceiptValidation_CFDictionaryAddValue_((CFMutableDictionaryRef) _currentContext->ReceiptValidation_dictionary, _key, _value2);
                    ReceiptValidation_CFRelease_(_key);
                }
                if (_value1) ReceiptValidation_CFRelease_(_value1);
                if (_value2) ReceiptValidation_CFRelease_(_value2);
                // Step into for InApp purchases
                if (_type == ReceiptValidation_ReceiptAttributeTypeInAppPurchase) {
                    _inappContext.ReceiptValidation_source = _current->value.data;
                    _inappContext.ReceiptValidation_length = _current->value.length;
                    _inappContext.ReceiptValidation_dictionary = NULL;
                    _inappContext.ReceiptValidation_parent = _currentContext;
                    _currentContext = &_inappContext;
                    break;
                }
            }
            if (!_currentContext->ReceiptValidation_dictionary) {
                continue;
            }
            // Step out for InApp purchases
            if (_currentContext->ReceiptValidation_parent) {
                _key1 = ReceiptValidation_DataStoreInAppPurchase;
                _key = ReceiptValidation_CFNumberCreate_(kCFAllocatorDefault, kCFNumberIntType, &_key1);
                _value1 = ReceiptValidation_CFDictionaryGetValue_((CFDictionaryRef) _currentContext->ReceiptValidation_parent->ReceiptValidation_dictionary, _key);
                if (!_value1) {
                    _value1 = ReceiptValidation_CFArrayCreateMutable_(kCFAllocatorDefault, 0, &kCFTypeArrayCallBacks);
                    ReceiptValidation_CFDictionaryAddValue_((CFMutableDictionaryRef) _currentContext->ReceiptValidation_parent->ReceiptValidation_dictionary, _key, _value1);
                    ReceiptValidation_CFRelease_(_value1);
                }
                ReceiptValidation_CFArrayAppendValue_((CFMutableArrayRef) _value1, _currentContext->ReceiptValidation_dictionary);
                ReceiptValidation_CFRelease_(_currentContext->ReceiptValidation_dictionary);
                ReceiptValidation_CFRelease_(_key);
                _currentContext = _currentContext->ReceiptValidation_parent;
            }
            if (*_currentContext->ReceiptValidation_pointer) {
                continue;
            }
            break;
        }
        if (ReceiptValidation_ctx->ReceiptValidation_receiptDict) ReceiptValidation_CFRelease_(ReceiptValidation_ctx->ReceiptValidation_receiptDict);
        ReceiptValidation_ctx->ReceiptValidation_receiptDict = _receiptContext.ReceiptValidation_dictionary;
    ReceiptValidation_GetReceiptInformation1__bail:
        if (_formatter) ReceiptValidation_CFRelease_(_formatter);
        if (_asn1decoder) ReceiptValidation_SecAsn1CoderRelease_(_asn1decoder);
        if (_content) ReceiptValidation_CFRelease_(_content);
        if (_decoder) ReceiptValidation_CFRelease_(_decoder);
    }
#else
#define ReceiptValidation_GetReceiptInformation1(ReceiptValidation_ctx) { \
ReceiptValidation_Parsing _receiptContext, _inappContext, *_currentContext; \
CMSDecoderRef _decoder = NULL; \
CFDataRef _content = NULL; \
CFNumberRef _key = NULL; \
SecAsn1CoderRef _asn1decoder = NULL; \
OSStatus _status; \
ReceiptValidation_Payload _payload = { 0 }; \
ReceiptValidation_ReceiptAttribute *_current; \
CFDateFormatterRef _formatter; \
ReceiptValidation_ReceiptAttributeType _key1, _key2; \
CFTypeRef _value1, _value2; \
ReceiptValidation_ASN1_DATA _asn1data; \
int _type, _integer; \
_status = ReceiptValidation_CMSDecoderCreate_(&_decoder); \
if (_status) { \
goto ReceiptValidation_GetReceiptInformation1__bail; \
} \
_status = ReceiptValidation_CMSDecoderUpdateMessage_(_decoder, ReceiptValidation_CFDataGetBytePtr_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_receiptData), ReceiptValidation_CFDataGetLength_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_receiptData)); \
if (_status) { \
goto ReceiptValidation_GetReceiptInformation1__bail; \
} \
_status = ReceiptValidation_CMSDecoderFinalizeMessage_(_decoder); \
if (_status) { \
goto ReceiptValidation_GetReceiptInformation1__bail; \
} \
_status = ReceiptValidation_CMSDecoderCopyContent_(_decoder, &_content); \
if (_status) { \
goto ReceiptValidation_GetReceiptInformation1__bail; \
} \
_status = ReceiptValidation_SecAsn1CoderCreate_(&_asn1decoder); \
if (_status) { \
goto ReceiptValidation_GetReceiptInformation1__bail; \
} \
_formatter = ReceiptValidation_CFDateFormatterCreate_(kCFAllocatorDefault, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
_value1 = ReceiptValidation_ObfuscationFunction4CF((ReceiptValidation_strings[18]), 238, 48);  \
ReceiptValidation_CFDateFormatterSetFormat_(_formatter, (CFStringRef) _value1); \
ReceiptValidation_CFRelease_(_value1); \
_receiptContext.ReceiptValidation_source = ReceiptValidation_CFDataGetBytePtr_(_content); \
_receiptContext.ReceiptValidation_length = ReceiptValidation_CFDataGetLength_(_content); \
_receiptContext.ReceiptValidation_dictionary = NULL; \
_receiptContext.ReceiptValidation_parent = NULL; \
_currentContext = &_receiptContext; \
while(true) { \
if (!_currentContext->ReceiptValidation_dictionary) { \
_currentContext->ReceiptValidation_dictionary = ReceiptValidation_CFDictionaryCreateMutable_(kCFAllocatorDefault, (CFIndex) 0x50, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks); \
_status = ReceiptValidation_SecAsn1Decode_(_asn1decoder, _currentContext->ReceiptValidation_source, _currentContext->ReceiptValidation_length, ReceiptValidation_kSetOfReceiptAttributeTemplate, &_payload); \
if (_status) { \
goto ReceiptValidation_GetReceiptInformation1__bail; \
} \
_currentContext->ReceiptValidation_pointer = _payload.attributes; \
} \
while(*_currentContext->ReceiptValidation_pointer) { \
_current = *_currentContext->ReceiptValidation_pointer++; \
ReceiptValidation_GetReceiptInformation1X((&_current->type), (&_type)); \
_key1 = _key2 = ReceiptValidation_DataStoreNone; \
_value1 = _value2 = NULL; \
switch(_type) { \
case ReceiptValidation_ReceiptAttributeTypeBundleId: \
case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
_status = ReceiptValidation_SecAsn1Decode_(_asn1decoder, _current->value.data, _current->value.length, kSecAsn1UTF8StringTemplate, &_asn1data); \
if (_status) { \
goto ReceiptValidation_GetReceiptInformation1__bail; \
} \
_value1 = ((_ReceiptValidation_CFStringCreateWithBytes_) ReceiptValidation_CFStringCreateWithBytes_)(kCFAllocatorDefault, (const UInt8 *) _asn1data.data, (CFIndex) _asn1data.length, kCFStringEncodingUTF8, false); \
_value2 = ReceiptValidation_CFDataCreate_(kCFAllocatorDefault, (const UInt8 *) _current->value.data, (CFIndex) _current->value.length); \
break; \
case ReceiptValidation_InAppAttributeTypePurchaseDate: \
case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
_status = ReceiptValidation_SecAsn1Decode_(_asn1decoder, _current->value.data, _current->value.length, kSecAsn1IA5StringTemplate, &_asn1data); \
if (_status) { \
goto ReceiptValidation_GetReceiptInformation1__bail; \
} \
_value1 = ((_ReceiptValidation_CFStringCreateWithBytes_) ReceiptValidation_CFStringCreateWithBytes_)(kCFAllocatorDefault, (const UInt8 *) _asn1data.data, (CFIndex) _asn1data.length, kCFStringEncodingASCII, false); \
_value2 = ReceiptValidation_CFDateFormatterCreateDateFromString_(kCFAllocatorDefault, _formatter, (CFStringRef) _value1, NULL); \
break; \
case ReceiptValidation_InAppAttributeTypeQuantity: \
_status = ReceiptValidation_SecAsn1Decode_(_asn1decoder, _current->value.data, _current->value.length, kSecAsn1IntegerTemplate, &_asn1data); \
if (_status) { \
goto ReceiptValidation_GetReceiptInformation1__bail; \
} \
ReceiptValidation_GetReceiptInformation1X((&_asn1data), (&_integer)); \
_value1 = ReceiptValidation_CFNumberCreate_(kCFAllocatorDefault, kCFNumberIntType, &_integer); \
break; \
case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
case ReceiptValidation_ReceiptAttributeTypeHash: \
_value1 = ReceiptValidation_CFDataCreate_(kCFAllocatorDefault, (const UInt8 *) _current->value.data, (CFIndex) _current->value.length); \
break; \
default: \
break; \
} \
switch(_type) { \
case ReceiptValidation_ReceiptAttributeTypeBundleId: \
_key1 = ReceiptValidation_DataStoreBundleId; \
_key2 = ReceiptValidation_DataStoreBundleIdData; \
break; \
case ReceiptValidation_ReceiptAttributeTypeBundleVersion: \
_key1 = ReceiptValidation_DataStoreBundleVersion; \
_key2 = ReceiptValidation_DataStoreBundleVersionData; \
break; \
case ReceiptValidation_InAppAttributeTypeProductIdentifer: \
_key1 = ReceiptValidation_InAppAttributeTypeProductIdentifer; \
break; \
case ReceiptValidation_InAppAttributeTypeTransactionIdentifer: \
_key1 = ReceiptValidation_InAppAttributeTypeTransactionIdentifer; \
break; \
case ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer: \
_key1 = ReceiptValidation_InAppAttributeTypeOriginalTransactionIdentifer; \
break; \
case ReceiptValidation_InAppAttributeTypePurchaseDate: \
_key2 = ReceiptValidation_InAppAttributeTypePurchaseDate; \
break; \
case ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate: \
_key2 = ReceiptValidation_InAppAttributeTypeOriginalPurchaseDate; \
break; \
case ReceiptValidation_InAppAttributeTypeQuantity: \
_key1 = ReceiptValidation_InAppAttributeTypeQuantity; \
break; \
case ReceiptValidation_ReceiptAttributeTypeOpaqueValue: \
_key1 = ReceiptValidation_DataStoreOpaqueValue; \
break; \
case ReceiptValidation_ReceiptAttributeTypeHash: \
_key1 = ReceiptValidation_DataStoreHash; \
break; \
default: \
break; \
} \
if (_key1 != ReceiptValidation_DataStoreNone) { \
_key = ReceiptValidation_CFNumberCreate_(kCFAllocatorDefault, kCFNumberIntType, &_key1); \
ReceiptValidation_CFDictionaryAddValue_((CFMutableDictionaryRef) _currentContext->ReceiptValidation_dictionary, _key, _value1); \
ReceiptValidation_CFRelease_(_key); \
} \
if (_key2 != ReceiptValidation_DataStoreNone) { \
_key = ReceiptValidation_CFNumberCreate_(kCFAllocatorDefault, kCFNumberIntType, &_key2); \
ReceiptValidation_CFDictionaryAddValue_((CFMutableDictionaryRef) _currentContext->ReceiptValidation_dictionary, _key, _value2); \
ReceiptValidation_CFRelease_(_key); \
} \
if (_value1) ReceiptValidation_CFRelease_(_value1); \
if (_value2) ReceiptValidation_CFRelease_(_value2); \
if (_type == ReceiptValidation_ReceiptAttributeTypeInAppPurchase) { \
_inappContext.ReceiptValidation_source = _current->value.data; \
_inappContext.ReceiptValidation_length = _current->value.length; \
_inappContext.ReceiptValidation_dictionary = NULL; \
_inappContext.ReceiptValidation_parent = _currentContext; \
_currentContext = &_inappContext; \
break; \
} \
} \
if (!_currentContext->ReceiptValidation_dictionary) { \
continue; \
} \
if (_currentContext->ReceiptValidation_parent) { \
_key1 = ReceiptValidation_DataStoreInAppPurchase; \
_key = ReceiptValidation_CFNumberCreate_(kCFAllocatorDefault, kCFNumberIntType, &_key1); \
_value1 = ReceiptValidation_CFDictionaryGetValue_((CFDictionaryRef) _currentContext->ReceiptValidation_parent->ReceiptValidation_dictionary, _key); \
if (!_value1) { \
_value1 = ReceiptValidation_CFArrayCreateMutable_(kCFAllocatorDefault, 0, &kCFTypeArrayCallBacks); \
ReceiptValidation_CFDictionaryAddValue_((CFMutableDictionaryRef) _currentContext->ReceiptValidation_parent->ReceiptValidation_dictionary, _key, _value1); \
ReceiptValidation_CFRelease_(_value1); \
} \
ReceiptValidation_CFArrayAppendValue_((CFMutableArrayRef) _value1, _currentContext->ReceiptValidation_dictionary); \
ReceiptValidation_CFRelease_(_currentContext->ReceiptValidation_dictionary); \
ReceiptValidation_CFRelease_(_key); \
_currentContext = _currentContext->ReceiptValidation_parent; \
} \
if (*_currentContext->ReceiptValidation_pointer) { \
continue; \
} \
break; \
} \
if (ReceiptValidation_ctx->ReceiptValidation_receiptDict) ReceiptValidation_CFRelease_(ReceiptValidation_ctx->ReceiptValidation_receiptDict); \
ReceiptValidation_ctx->ReceiptValidation_receiptDict = _receiptContext.ReceiptValidation_dictionary; \
ReceiptValidation_GetReceiptInformation1__bail: \
if (_formatter) ReceiptValidation_CFRelease_(_formatter); \
if (_asn1decoder) ReceiptValidation_SecAsn1CoderRelease_(_asn1decoder); \
if (_content) ReceiptValidation_CFRelease_(_content); \
if (_decoder) ReceiptValidation_CFRelease_(_decoder); \
}
#endif
    
    //
    // CodeBlock CheckBundleIdentifier
    //
#if DEBUG
    inline static void ReceiptValidation_CheckBundleIdentifier1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        CFStringRef _str1 = ReceiptValidation_ObfuscationFunction2CF((ReceiptValidation_strings[2]), -17, 32);
        volatile int _code = 163; _code -= 106; _code *= 3; _code += 2;
        CFStringRef _str2 = ReceiptValidation_CFBundleGetIdentifier_((CFBundleRef) ReceiptValidation_ctx->ReceiptValidation_mainBundle);
        if (ReceiptValidation_CFStringCompare_(_str1, _str2, 0) != kCFCompareEqualTo) {
            ReceiptValidation_exit_(_code);
            ReceiptValidation_CFRelease_(_str2);
        }
        ReceiptValidation_CFRelease_(_str1);
    }
#else
#define ReceiptValidation_CheckBundleIdentifier1(ReceiptValidation_ctx) { \
CFStringRef _str1 = ReceiptValidation_ObfuscationFunction2CF((ReceiptValidation_strings[2]), -17, 32); \
volatile int _code = 11; _code -= 1; _code *= 17; _code += 3; \
CFStringRef _str2 = ReceiptValidation_CFBundleGetIdentifier_((CFBundleRef) ReceiptValidation_ctx->ReceiptValidation_mainBundle); \
if (ReceiptValidation_CFStringCompare_(_str1, _str2, 0) != kCFCompareEqualTo) { \
ReceiptValidation_exit_(_code); \
ReceiptValidation_CFRelease_(_str2); \
} \
ReceiptValidation_CFRelease_(_str1); \
}
#endif
    
    //
    // CodeBlock CheckBundleVersion
    //
#if DEBUG
    inline static void ReceiptValidation_CheckBundleVersion1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        volatile int _code = 124; _code -= 67; _code *= 3; _code += 2;
        CFStringRef _str1 = ReceiptValidation_ObfuscationFunction2CF((ReceiptValidation_strings[13]), -51, 16);
        CFStringRef _str2 = ReceiptValidation_ObfuscationFunction4CF((ReceiptValidation_strings[56]), 145, 32);
        CFStringRef _str3 = (CFStringRef) ReceiptValidation_CFBundleGetValueForInfoDictionaryKey_((CFBundleRef) ReceiptValidation_ctx->ReceiptValidation_mainBundle, _str2);
        if (ReceiptValidation_CFStringCompare_(_str1, _str3, 0) != kCFCompareEqualTo) {
            ReceiptValidation_exit_(_code);
            ReceiptValidation_CFRelease_(_str1);
            ReceiptValidation_CFRelease_(_str2);
        }
        ReceiptValidation_CFRelease_(_str2);
        ReceiptValidation_CFRelease_(_str1);
    }
#else
#define ReceiptValidation_CheckBundleVersion1(ReceiptValidation_ctx) { \
volatile int _code = 73; _code -= 30; _code *= 4; _code += 1; \
CFStringRef _str1 = ReceiptValidation_ObfuscationFunction2CF((ReceiptValidation_strings[13]), -51, 16); \
CFStringRef _str2 = ReceiptValidation_ObfuscationFunction4CF((ReceiptValidation_strings[56]), 145, 32); \
CFStringRef _str3 = (CFStringRef) ReceiptValidation_CFBundleGetValueForInfoDictionaryKey_((CFBundleRef) ReceiptValidation_ctx->ReceiptValidation_mainBundle, _str2); \
if (ReceiptValidation_CFStringCompare_(_str1, _str3, 0) != kCFCompareEqualTo) { \
ReceiptValidation_exit_(_code); \
ReceiptValidation_CFRelease_(_str1); \
ReceiptValidation_CFRelease_(_str2); \
} \
ReceiptValidation_CFRelease_(_str2); \
ReceiptValidation_CFRelease_(_str1); \
}
#endif
    
    //
    // CodeBlock CheckBundleSignature
    //
#if DEBUG
    inline static void ReceiptValidation_CheckBundleSignature1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        CFStringRef _str1 = NULL;
        CFURLRef _url1 = NULL;
        SecStaticCodeRef _staticCode = NULL;
        SecRequirementRef _requirement = NULL;
        OSStatus _status;
        CFErrorRef _error = NULL;
        _url1 = ReceiptValidation_CFBundleCopyBundleURL_((CFBundleRef) ReceiptValidation_ctx->ReceiptValidation_mainBundle);
        _status = ReceiptValidation_SecStaticCodeCreateWithPath_(_url1, kSecCSDefaultFlags, &_staticCode);
        if (_status != errSecSuccess) {
            goto ReceiptValidation_CheckBundleSignature1__bail;
        }
        _str1 = ReceiptValidation_ObfuscationFunction1CF((ReceiptValidation_strings[151]), 115, 32);
        _status = ReceiptValidation_SecRequirementCreateWithStringAndErrors_(_str1, kSecCSDefaultFlags, &_error, &_requirement);
        if (_status != errSecSuccess) {
            goto ReceiptValidation_CheckBundleSignature1__bail;
        }
        _status = ReceiptValidation_SecStaticCodeCheckValidityWithErrors_(_staticCode, kSecCSDefaultFlags, _requirement, &_error);
        if (_status != errSecSuccess) {
            goto ReceiptValidation_CheckBundleSignature1__bail;
        }
    ReceiptValidation_CheckBundleSignature1__bail:
        if (_error) ReceiptValidation_CFRelease_(_error);
        if (_staticCode) ReceiptValidation_CFRelease_(_staticCode);
        if (_requirement) ReceiptValidation_CFRelease_(_requirement);
        if (_str1) ReceiptValidation_CFRelease_(_str1);
        if (_url1) ReceiptValidation_CFRelease_(_url1);
    }
#else
#define ReceiptValidation_CheckBundleSignature1(ReceiptValidation_ctx) { \
CFStringRef _str1 = NULL; \
CFURLRef _url1 = NULL; \
SecStaticCodeRef _staticCode = NULL; \
SecRequirementRef _requirement = NULL; \
OSStatus _status; \
CFErrorRef _error = NULL; \
_url1 = ReceiptValidation_CFBundleCopyBundleURL_((CFBundleRef) ReceiptValidation_ctx->ReceiptValidation_mainBundle); \
_status = ReceiptValidation_SecStaticCodeCreateWithPath_(_url1, kSecCSDefaultFlags, &_staticCode); \
if (_status != errSecSuccess) { \
goto ReceiptValidation_CheckBundleSignature1__bail; \
} \
_str1 = ReceiptValidation_ObfuscationFunction1CF((ReceiptValidation_strings[151]), 115, 32); \
_status = ReceiptValidation_SecRequirementCreateWithStringAndErrors_(_str1, kSecCSDefaultFlags, &_error, &_requirement); \
if (_status != errSecSuccess) { \
goto ReceiptValidation_CheckBundleSignature1__bail; \
} \
_status = ReceiptValidation_SecStaticCodeCheckValidityWithErrors_(_staticCode, kSecCSDefaultFlags, _requirement, &_error); \
if (_status != errSecSuccess) { \
goto ReceiptValidation_CheckBundleSignature1__bail; \
} \
ReceiptValidation_CheckBundleSignature1__bail: \
if (_error) ReceiptValidation_CFRelease_(_error); \
if (_staticCode) ReceiptValidation_CFRelease_(_staticCode); \
if (_requirement) ReceiptValidation_CFRelease_(_requirement); \
if (_str1) ReceiptValidation_CFRelease_(_str1); \
if (_url1) ReceiptValidation_CFRelease_(_url1); \
}
#endif
    
    //
    // CodeBlock CheckReceiptSignature
    //
#if DEBUG
    inline static void ReceiptValidation_CheckReceiptSignature1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        CMSDecoderRef _decoder = NULL;
        SecTrustRef _trustRef = NULL;
        SecPolicyRef _policyRef = NULL;
        volatile int _code = 159; _code -= 102; _code *= 3; _code += 2;
        OSStatus _status;
        _status = ReceiptValidation_CMSDecoderCreate_(&_decoder);
        if (_status) {
            ReceiptValidation_exit_(_code);
            goto ReceiptValidation_CheckReceiptSignature1__bail;
        }
        _status = ReceiptValidation_CMSDecoderUpdateMessage_(_decoder, ReceiptValidation_CFDataGetBytePtr_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_receiptData), ReceiptValidation_CFDataGetLength_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_receiptData));
        if (_status) {
            ReceiptValidation_exit_(_code);
            goto ReceiptValidation_CheckReceiptSignature1__bail;
        }
        _status = ReceiptValidation_CMSDecoderFinalizeMessage_(_decoder);
        if (_status) {
            ReceiptValidation_exit_(_code);
            ReceiptValidation_CFRelease_(_decoder);
            goto ReceiptValidation_CheckReceiptSignature1__bail;
        }
        CMSSignerStatus _signerStatus;
        OSStatus _certVerifyresult;
        _policyRef = ReceiptValidation_SecPolicyCreateBasicX509_();
        _status = ReceiptValidation_CMSDecoderCopySignerStatus_(_decoder, 0, _policyRef, TRUE, &_signerStatus, &_trustRef, &_certVerifyresult);
        if (_status) {
            ReceiptValidation_exit_(_code);
            goto ReceiptValidation_CheckReceiptSignature1__bail;
        }
    ReceiptValidation_CheckReceiptSignature1__bail:
        if (_policyRef) ReceiptValidation_CFRelease_(_policyRef);
        if (_trustRef) ReceiptValidation_CFRelease_(_trustRef);
        if (_decoder) ReceiptValidation_CFRelease_(_decoder);
    }
#else
#define ReceiptValidation_CheckReceiptSignature1(ReceiptValidation_ctx) { \
CMSDecoderRef _decoder = NULL; \
SecTrustRef _trustRef = NULL; \
SecPolicyRef _policyRef = NULL; \
volatile int _code = 101; _code -= 44; _code *= 3; _code += 2; \
OSStatus _status; \
_status = ReceiptValidation_CMSDecoderCreate_(&_decoder); \
if (_status) { \
ReceiptValidation_exit_(_code); \
goto ReceiptValidation_CheckReceiptSignature1__bail; \
} \
_status = ReceiptValidation_CMSDecoderUpdateMessage_(_decoder, ReceiptValidation_CFDataGetBytePtr_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_receiptData), ReceiptValidation_CFDataGetLength_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_receiptData)); \
if (_status) { \
ReceiptValidation_exit_(_code); \
goto ReceiptValidation_CheckReceiptSignature1__bail; \
} \
_status = ReceiptValidation_CMSDecoderFinalizeMessage_(_decoder); \
if (_status) { \
ReceiptValidation_exit_(_code); \
ReceiptValidation_CFRelease_(_decoder); \
goto ReceiptValidation_CheckReceiptSignature1__bail; \
} \
CMSSignerStatus _signerStatus; \
OSStatus _certVerifyresult; \
_policyRef = ReceiptValidation_SecPolicyCreateBasicX509_(); \
_status = ReceiptValidation_CMSDecoderCopySignerStatus_(_decoder, 0, _policyRef, TRUE, &_signerStatus, &_trustRef, &_certVerifyresult); \
if (_status) { \
ReceiptValidation_exit_(_code); \
goto ReceiptValidation_CheckReceiptSignature1__bail; \
} \
ReceiptValidation_CheckReceiptSignature1__bail: \
if (_policyRef) ReceiptValidation_CFRelease_(_policyRef); \
if (_trustRef) ReceiptValidation_CFRelease_(_trustRef); \
if (_decoder) ReceiptValidation_CFRelease_(_decoder); \
}
#endif
    
    //
    // CodeBlock CheckReceiptIdentifier
    //
#if DEBUG
    inline static void ReceiptValidation_CheckReceiptIdentifier1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        ReceiptValidation_ReceiptAttributeType _value = ReceiptValidation_DataStoreBundleId;
        volatile int _code = 147; _code -= 90; _code *= 3; _code += 2;
        CFStringRef _str1 = ReceiptValidation_ObfuscationFunction3CF((ReceiptValidation_strings[118]), -46, 32);
        CFNumberRef _key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &_value);
        CFStringRef _str2 = (CFStringRef) ReceiptValidation_CFDictionaryGetValue_((CFDictionaryRef) ReceiptValidation_ctx->ReceiptValidation_receiptDict, _key);
        ReceiptValidation_CFRelease_(_key);
        if (ReceiptValidation_CFStringCompare_(_str1, _str2, 0) != kCFCompareEqualTo) {
            ReceiptValidation_exit_(_code);
        }
        ReceiptValidation_CFRelease_(_str1);
    }
#else
#define ReceiptValidation_CheckReceiptIdentifier1(ReceiptValidation_ctx) { \
ReceiptValidation_ReceiptAttributeType _value = ReceiptValidation_DataStoreBundleId; \
volatile int _code = 103; _code -= 46; _code *= 3; _code += 2; \
CFStringRef _str1 = ReceiptValidation_ObfuscationFunction3CF((ReceiptValidation_strings[118]), -46, 32); \
CFNumberRef _key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &_value); \
CFStringRef _str2 = (CFStringRef) ReceiptValidation_CFDictionaryGetValue_((CFDictionaryRef) ReceiptValidation_ctx->ReceiptValidation_receiptDict, _key); \
ReceiptValidation_CFRelease_(_key); \
if (ReceiptValidation_CFStringCompare_(_str1, _str2, 0) != kCFCompareEqualTo) { \
ReceiptValidation_exit_(_code); \
} \
ReceiptValidation_CFRelease_(_str1); \
}
#endif
    
    //
    // CodeBlock CheckReceiptVersion
    //
#if DEBUG
    inline static void ReceiptValidation_CheckReceiptVersion1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        ReceiptValidation_ReceiptAttributeType _value = ReceiptValidation_DataStoreBundleVersion;
        CFStringRef _str1 = ReceiptValidation_ObfuscationFunction3CF((ReceiptValidation_strings[44]), 26, 16);
        volatile int _code = 45; _code -= 11; _code *= 5; _code += 3;
        CFNumberRef _key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &_value);
        CFStringRef _str2 = (CFStringRef) ReceiptValidation_CFDictionaryGetValue_((CFDictionaryRef) ReceiptValidation_ctx->ReceiptValidation_receiptDict, _key);
        ReceiptValidation_CFRelease_(_key);
        if (ReceiptValidation_CFStringCompare_(_str1, _str2, 0) != kCFCompareEqualTo) {
            ReceiptValidation_exit_(_code);
        }
        ReceiptValidation_CFRelease_(_str1);
    }
#else
#define ReceiptValidation_CheckReceiptVersion1(ReceiptValidation_ctx) { \
ReceiptValidation_ReceiptAttributeType _value = ReceiptValidation_DataStoreBundleVersion; \
CFStringRef _str1 = ReceiptValidation_ObfuscationFunction3CF((ReceiptValidation_strings[44]), 26, 16); \
volatile int _code = 128; _code -= 71; _code *= 3; _code += 2; \
CFNumberRef _key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &_value); \
CFStringRef _str2 = (CFStringRef) ReceiptValidation_CFDictionaryGetValue_((CFDictionaryRef) ReceiptValidation_ctx->ReceiptValidation_receiptDict, _key); \
ReceiptValidation_CFRelease_(_key); \
if (ReceiptValidation_CFStringCompare_(_str1, _str2, 0) != kCFCompareEqualTo) { \
ReceiptValidation_exit_(_code); \
} \
ReceiptValidation_CFRelease_(_str1); \
}
#endif
    
    //
    // CodeBlock CheckReceiptHash
    //
#if DEBUG
    inline static void ReceiptValidation_CheckReceiptHash1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        CFDataRef _data1, _data2, _data3;
        CFMutableDataRef _data4;
        unsigned char _digest[0x50];
        volatile int _counter = 15; _counter -= 9; _counter *= 3; _counter += 2;
        ReceiptValidation_ReceiptAttributeType _value;
        CFNumberRef _key;
        _value = ReceiptValidation_DataStoreOpaqueValue;
        _key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &_value);
        _data1 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_((CFDictionaryRef) ReceiptValidation_ctx->ReceiptValidation_receiptDict, _key);
        ReceiptValidation_CFRelease_(_key);
        _value = ReceiptValidation_DataStoreBundleIdData;
        _key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &_value);
        _data2 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_((CFDictionaryRef) ReceiptValidation_ctx->ReceiptValidation_receiptDict, _key);
        ReceiptValidation_CFRelease_(_key);
        _value = ReceiptValidation_DataStoreHash;
        _key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &_value);
        _data3 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_((CFDictionaryRef) ReceiptValidation_ctx->ReceiptValidation_receiptDict, _key);
        ReceiptValidation_CFRelease_(_key);
        _data4 = ReceiptValidation_CFDataCreateMutable_(kCFAllocatorDefault, ReceiptValidation_CFDataGetLength_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_macData) + ReceiptValidation_CFDataGetLength_(_data1) + ReceiptValidation_CFDataGetLength_(_data2));
        ReceiptValidation_CFDataAppendBytes_(_data4, ReceiptValidation_CFDataGetBytePtr_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_macData), ReceiptValidation_CFDataGetLength_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_macData));
        ReceiptValidation_CFDataAppendBytes_(_data4, ReceiptValidation_CFDataGetBytePtr_(_data1), ReceiptValidation_CFDataGetLength_(_data1));
        ReceiptValidation_CFDataAppendBytes_(_data4, ReceiptValidation_CFDataGetBytePtr_(_data2), ReceiptValidation_CFDataGetLength_(_data2));
        CC_SHA1_CTX hashctx;
        ReceiptValidation_CC_SHA1_Init_(&hashctx);
        ReceiptValidation_CC_SHA1_Update_(&hashctx, (const void *) ReceiptValidation_CFDataGetBytePtr_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_macData), (CC_LONG) ReceiptValidation_CFDataGetLength_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_macData));
        ReceiptValidation_CC_SHA1_Update_(&hashctx, (const void *) ReceiptValidation_CFDataGetBytePtr_(_data1), (CC_LONG) ReceiptValidation_CFDataGetLength_(_data1));
        ReceiptValidation_CC_SHA1_Update_(&hashctx, (const void *) ReceiptValidation_CFDataGetBytePtr_(_data2), (CC_LONG) ReceiptValidation_CFDataGetLength_(_data2));
        ReceiptValidation_CC_SHA1_Final_(_digest, &hashctx);
        volatile int _code = 166; _code -= 109; _code *= 3; _code += 2;
        CFDataRef _data5 = ReceiptValidation_CFDataCreate_(kCFAllocatorDefault, (const UInt8 *) _digest, _counter);
        if (!ReceiptValidation_CFEqual_(_data3, _data5)) {
            ReceiptValidation_CFRelease_(_data5);
            ReceiptValidation_exit_(_code);
            ReceiptValidation_CFRelease_(_data5);
            goto ReceiptValidation_CheckReceiptHash1__bail;
        }
        ReceiptValidation_CFRelease_(_data5);
    ReceiptValidation_CheckReceiptHash1__bail:
        ReceiptValidation_CFRelease_(_data4);
    }
#else
#define ReceiptValidation_CheckReceiptHash1(ReceiptValidation_ctx) { \
CFDataRef _data1, _data2, _data3; \
CFMutableDataRef _data4; \
unsigned char _digest[0x50]; \
volatile int _counter = 8; _counter -= 3; _counter *= 4; \
ReceiptValidation_ReceiptAttributeType _value; \
CFNumberRef _key; \
_value = ReceiptValidation_DataStoreOpaqueValue; \
_key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &_value); \
_data1 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_((CFDictionaryRef) ReceiptValidation_ctx->ReceiptValidation_receiptDict, _key); \
ReceiptValidation_CFRelease_(_key); \
_value = ReceiptValidation_DataStoreBundleIdData; \
_key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &_value); \
_data2 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_((CFDictionaryRef) ReceiptValidation_ctx->ReceiptValidation_receiptDict, _key); \
ReceiptValidation_CFRelease_(_key); \
_value = ReceiptValidation_DataStoreHash; \
_key = CFNumberCreate(kCFAllocatorDefault, kCFNumberIntType, &_value); \
_data3 = (CFDataRef) ReceiptValidation_CFDictionaryGetValue_((CFDictionaryRef) ReceiptValidation_ctx->ReceiptValidation_receiptDict, _key); \
ReceiptValidation_CFRelease_(_key); \
_data4 = ReceiptValidation_CFDataCreateMutable_(kCFAllocatorDefault, ReceiptValidation_CFDataGetLength_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_macData) + ReceiptValidation_CFDataGetLength_(_data1) + ReceiptValidation_CFDataGetLength_(_data2)); \
ReceiptValidation_CFDataAppendBytes_(_data4, ReceiptValidation_CFDataGetBytePtr_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_macData), ReceiptValidation_CFDataGetLength_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_macData)); \
ReceiptValidation_CFDataAppendBytes_(_data4, ReceiptValidation_CFDataGetBytePtr_(_data1), ReceiptValidation_CFDataGetLength_(_data1)); \
ReceiptValidation_CFDataAppendBytes_(_data4, ReceiptValidation_CFDataGetBytePtr_(_data2), ReceiptValidation_CFDataGetLength_(_data2)); \
CC_SHA1_CTX hashctx; \
ReceiptValidation_CC_SHA1_Init_(&hashctx); \
ReceiptValidation_CC_SHA1_Update_(&hashctx, (const void *) ReceiptValidation_CFDataGetBytePtr_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_macData), (CC_LONG) ReceiptValidation_CFDataGetLength_((CFDataRef) ReceiptValidation_ctx->ReceiptValidation_macData)); \
ReceiptValidation_CC_SHA1_Update_(&hashctx, (const void *) ReceiptValidation_CFDataGetBytePtr_(_data1), (CC_LONG) ReceiptValidation_CFDataGetLength_(_data1)); \
ReceiptValidation_CC_SHA1_Update_(&hashctx, (const void *) ReceiptValidation_CFDataGetBytePtr_(_data2), (CC_LONG) ReceiptValidation_CFDataGetLength_(_data2)); \
ReceiptValidation_CC_SHA1_Final_(_digest, &hashctx); \
volatile int _code = 86; _code -= 43; _code *= 4; _code += 1; \
CFDataRef _data5 = ReceiptValidation_CFDataCreate_(kCFAllocatorDefault, (const UInt8 *) _digest, _counter); \
if (!ReceiptValidation_CFEqual_(_data3, _data5)) { \
ReceiptValidation_CFRelease_(_data5); \
ReceiptValidation_exit_(_code); \
ReceiptValidation_CFRelease_(_data5); \
goto ReceiptValidation_CheckReceiptHash1__bail; \
} \
ReceiptValidation_CFRelease_(_data5); \
ReceiptValidation_CheckReceiptHash1__bail: \
ReceiptValidation_CFRelease_(_data4); \
}
#endif
    
    //
    // CodeBlock Runner
    //
#ifdef RUNNER
#define RUNNER_SIGNATURE int(*_RUNNER_)(int argc, const char *argv[])
    typedef RUNNER_SIGNATURE;
    static long *RUNNER_ = ((long *)RUNNER - 2470);
    
#endif
    
    inline static void ReceiptValidation_Runner1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        
#ifdef RUNNER
        
        ((_RUNNER_)(RUNNER_ + 2470))(ReceiptValidation_ctx->ReceiptValidation_argc, ReceiptValidation_ctx->ReceiptValidation_argv);
        
#else
        
        ReceiptValidation_NSApplicationMain_(ReceiptValidation_ctx->ReceiptValidation_argc, ReceiptValidation_ctx->ReceiptValidation_argv);
        
#endif
        
    }
    
    //
    // CodeBlock CleanUp
    //
#if DEBUG
    inline static void ReceiptValidation_CleanUp1(ReceiptValidation_Context *ReceiptValidation_ctx) {
        int _index;                    
        CFTypeRef _references[3] = { ReceiptValidation_ctx->ReceiptValidation_receiptData, ReceiptValidation_ctx->ReceiptValidation_macData, ReceiptValidation_ctx->ReceiptValidation_receiptDict };                    
        for(_index = 0; _index < 3; _index++) {
            if (_references[_index]) {
                CFRelease(_references[_index]);
                _references[_index] = NULL;
            }
        }
    }
#else
#define ReceiptValidation_CleanUp1(ReceiptValidation_ctx) { \
int _index;                     \
CFTypeRef _references[3] = { ReceiptValidation_ctx->ReceiptValidation_receiptData, ReceiptValidation_ctx->ReceiptValidation_macData, ReceiptValidation_ctx->ReceiptValidation_receiptDict };                     \
for(_index = 0; _index < 3; _index++) { \
if (_references[_index]) { \
CFRelease(_references[_index]); \
_references[_index] = NULL; \
} \
} \
}
#endif
    
    
    
    //
    // Entry point for receipt/InApp validation
    //
#if DEBUG || RECEIGEN_PEDANTIC
    inline static int CheckReceiptAndRun(int argc, const char *argv[]) {
        ReceiptValidation_Context ReceiptValidation_ctx0 = { 0 };
        ReceiptValidation_ctx0.ReceiptValidation_argc = argc;
        ReceiptValidation_ctx0.ReceiptValidation_argv = (const char **) argv;
        
        volatile int idx = 2378;
        while(idx != 979) {
            switch(idx) {
                case 1656:
                {
                    ReceiptValidation_LoadReceipt1((&ReceiptValidation_ctx0));
                    idx += 840; idx /= 4; 
                    break;
                }
                case 3069:
                {
                    ReceiptValidation_CleanUp1((&ReceiptValidation_ctx0));
                    idx += 1826; idx /= 5; 
                    break;
                }
                case 624:
                {
                    ReceiptValidation_GetMacAddress1((&ReceiptValidation_ctx0));
                    idx -= 166; idx *= 6; idx += 4; 
                    break;
                }
                case 491:
                {
                    ReceiptValidation_CheckReceiptSignature1((&ReceiptValidation_ctx0));
                    idx -= 123; idx *= 6; idx += 1; 
                    break;
                }
                case 1242:
                {
                    ReceiptValidation_CheckReceiptHash1((&ReceiptValidation_ctx0));
                    idx -= 473; idx *= 4; idx += 3; 
                    break;
                }
                case 2209:
                {
                    ReceiptValidation_CheckReceiptIdentifier1((&ReceiptValidation_ctx0));
                    idx -= 848; idx *= 3; idx += 1; 
                    break;
                }
                case 3079:
                {
                    ReceiptValidation_Runner1((&ReceiptValidation_ctx0));
                    idx += 3059; idx /= 2; 
                    break;
                }
                case 2663:
                {
                    ReceiptValidation_CheckBundleIdentifier1((&ReceiptValidation_ctx0));
                    idx += 256; idx /= 21; 
                    break;
                }
                case 2378:
                {
                    ReceiptValidation_GetMainBundle1((&ReceiptValidation_ctx0));
                    idx += 934; idx /= 2; 
                    break;
                }
                case 236:
                {
                    ReceiptValidation_CheckBundleSignature1((&ReceiptValidation_ctx0));
                    idx -= 114; idx *= 4; idx += 3; 
                    break;
                }
                case 139:
                {
                    ReceiptValidation_CheckBundleVersion1((&ReceiptValidation_ctx0));
                    idx -= 61; idx *= 3; idx += 2; 
                    break;
                }
                case 4084:
                {
                    ReceiptValidation_CheckReceiptVersion1((&ReceiptValidation_ctx0));
                    idx += 2126; idx /= 5; 
                    break;
                }
                case 2752:
                {
                    ReceiptValidation_GetReceiptInformation1((&ReceiptValidation_ctx0));
                    idx += 2574; idx /= 2; 
                    break;
                }
            }
        }
        return 0;
    }
    
#else
#define CheckReceiptAndRun(argc, argv) ({ \
ReceiptValidation_Context ReceiptValidation_ctx0 = { 0 }; \
ReceiptValidation_ctx0.ReceiptValidation_argc = argc; \
ReceiptValidation_ctx0.ReceiptValidation_argv = (const char **) argv; \
\
volatile int idx = 2378; \
while(idx != 979) { \
switch(idx) { \
case 1656: \
{ \
ReceiptValidation_LoadReceipt1((&ReceiptValidation_ctx0)); \
idx += 840; idx /= 4;  \
break; \
} \
case 3069: \
{ \
ReceiptValidation_CleanUp1((&ReceiptValidation_ctx0)); \
idx += 1826; idx /= 5;  \
break; \
} \
case 624: \
{ \
ReceiptValidation_GetMacAddress1((&ReceiptValidation_ctx0)); \
idx -= 166; idx *= 6; idx += 4;  \
break; \
} \
case 491: \
{ \
ReceiptValidation_CheckReceiptSignature1((&ReceiptValidation_ctx0)); \
idx -= 123; idx *= 6; idx += 1;  \
break; \
} \
case 1242: \
{ \
ReceiptValidation_CheckReceiptHash1((&ReceiptValidation_ctx0)); \
idx -= 473; idx *= 4; idx += 3;  \
break; \
} \
case 2209: \
{ \
ReceiptValidation_CheckReceiptIdentifier1((&ReceiptValidation_ctx0)); \
idx -= 848; idx *= 3; idx += 1;  \
break; \
} \
case 3079: \
{ \
ReceiptValidation_Runner1((&ReceiptValidation_ctx0)); \
idx += 3059; idx /= 2;  \
break; \
} \
case 2663: \
{ \
ReceiptValidation_CheckBundleIdentifier1((&ReceiptValidation_ctx0)); \
idx += 256; idx /= 21;  \
break; \
} \
case 2378: \
{ \
ReceiptValidation_GetMainBundle1((&ReceiptValidation_ctx0)); \
idx += 934; idx /= 2;  \
break; \
} \
case 236: \
{ \
ReceiptValidation_CheckBundleSignature1((&ReceiptValidation_ctx0)); \
idx -= 114; idx *= 4; idx += 3;  \
break; \
} \
case 139: \
{ \
ReceiptValidation_CheckBundleVersion1((&ReceiptValidation_ctx0)); \
idx -= 61; idx *= 3; idx += 2;  \
break; \
} \
case 4084: \
{ \
ReceiptValidation_CheckReceiptVersion1((&ReceiptValidation_ctx0)); \
idx += 2126; idx /= 5;  \
break; \
} \
case 2752: \
{ \
ReceiptValidation_GetReceiptInformation1((&ReceiptValidation_ctx0)); \
idx += 2574; idx /= 2;  \
break; \
} \
} \
} \
0; \
}) \

#endif
    
    
    //
    // C++ epilogue
    //
#ifdef __cplusplus
}
#endif

